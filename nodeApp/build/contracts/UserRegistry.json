{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "nick",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fieldId",
          "type": "uint256"
        }
      ],
      "name": "ExpertFieldAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "nick",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "public_key",
          "type": "string"
        }
      ],
      "name": "UserRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_nick",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_fieldId",
          "type": "uint256"
        }
      ],
      "name": "addExpertField",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_address",
          "type": "string"
        }
      ],
      "name": "getNickByAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_nick",
          "type": "string"
        }
      ],
      "name": "getUserInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "public_key",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "expertFields",
          "type": "uint256[]"
        },
        {
          "internalType": "string",
          "name": "additional_data",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "is_bot",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_nick",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_publicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_additionalData",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_isBot",
          "type": "bool"
        }
      ],
      "name": "registerUser",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "contracts/UserRegistry.sol"
  },
  "ast": {
    "absolutePath": "contracts/UserRegistry.sol",
    "exportedSymbols": {
      "UserRegistry": [
        1137
      ]
    },
    "id": 1138,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 906,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "UserRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1137,
        "linearizedBaseContracts": [
          1137
        ],
        "name": "UserRegistry",
        "nameLocation": "66:12:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "UserRegistry.User",
            "id": 924,
            "members": [
              {
                "constant": false,
                "id": 908,
                "mutability": "mutable",
                "name": "nick",
                "nameLocation": "114:4:3",
                "nodeType": "VariableDeclaration",
                "scope": 924,
                "src": "107:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 907,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "107:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 910,
                "mutability": "mutable",
                "name": "public_key",
                "nameLocation": "135:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 924,
                "src": "128:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 909,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "128:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 913,
                "mutability": "mutable",
                "name": "expertFields",
                "nameLocation": "165:12:3",
                "nodeType": "VariableDeclaration",
                "scope": 924,
                "src": "155:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "155:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 912,
                  "nodeType": "ArrayTypeName",
                  "src": "155:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 917,
                "mutability": "mutable",
                "name": "hasExpertField",
                "nameLocation": "212:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 924,
                "src": "187:39:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "typeName": {
                  "id": 916,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "195:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "187:24:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 915,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 919,
                "mutability": "mutable",
                "name": "additional_data",
                "nameLocation": "270:15:3",
                "nodeType": "VariableDeclaration",
                "scope": 924,
                "src": "263:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 918,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "263:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 921,
                "mutability": "mutable",
                "name": "is_bot",
                "nameLocation": "300:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 924,
                "src": "295:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 920,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "295:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 923,
                "mutability": "mutable",
                "name": "exists",
                "nameLocation": "321:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 924,
                "src": "316:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 922,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "316:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "92:4:3",
            "nodeType": "StructDefinition",
            "scope": 1137,
            "src": "85:249:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 929,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "372:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 1137,
            "src": "340:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$924_storage_$",
              "typeString": "mapping(string => struct UserRegistry.User)"
            },
            "typeName": {
              "id": 928,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 925,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "348:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "340:23:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$924_storage_$",
                "typeString": "mapping(string => struct UserRegistry.User)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 927,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 926,
                  "name": "User",
                  "nameLocations": [
                    "358:4:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 924,
                  "src": "358:4:3"
                },
                "referencedDeclaration": 924,
                "src": "358:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                  "typeString": "struct UserRegistry.User"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 933,
            "mutability": "mutable",
            "name": "addressToNick",
            "nameLocation": "417:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 1137,
            "src": "383:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_string_storage_$",
              "typeString": "mapping(string => string)"
            },
            "typeName": {
              "id": 932,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 930,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "391:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "383:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_string_storage_$",
                "typeString": "mapping(string => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 931,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "401:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "996d7324173609959370942b1ee1b743dc623b3d50459e66c1d55df55e5a9f37",
            "id": 939,
            "name": "UserRegistered",
            "nameLocation": "443:14:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 935,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nick",
                  "nameLocation": "465:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "458:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 934,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 937,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "public_key",
                  "nameLocation": "478:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "471:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 936,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "457:32:3"
            },
            "src": "437:53:3"
          },
          {
            "anonymous": false,
            "eventSelector": "e8c8d70a47cfd9e36447bfef4703abc190a6ea8608550a2c7fd4f0308e1365a9",
            "id": 945,
            "name": "ExpertFieldAdded",
            "nameLocation": "501:16:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nick",
                  "nameLocation": "525:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "518:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 943,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fieldId",
                  "nameLocation": "539:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "531:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "517:30:3"
            },
            "src": "495:53:3"
          },
          {
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "736:504:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "754:20:3",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 959,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 929,
                              "src": "755:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$924_storage_$",
                                "typeString": "mapping(string memory => struct UserRegistry.User storage ref)"
                              }
                            },
                            "id": 961,
                            "indexExpression": {
                              "id": 960,
                              "name": "_nick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "761:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "755:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$924_storage",
                              "typeString": "struct UserRegistry.User storage ref"
                            }
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "768:6:3",
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 923,
                          "src": "755:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e69636b5f616c72656164795f74616b656e",
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "776:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_122fc10ea0e30cce7bb4495425320147285d1ccb92075667c18d9334e3ac11a2",
                          "typeString": "literal_string \"nick_already_taken\""
                        },
                        "value": "nick_already_taken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_122fc10ea0e30cce7bb4495425320147285d1ccb92075667c18d9334e3ac11a2",
                          "typeString": "literal_string \"nick_already_taken\""
                        }
                      ],
                      "id": 958,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "746:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 966,
                  "nodeType": "ExpressionStatement",
                  "src": "746:51:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 970,
                                  "name": "addressToNick",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 933,
                                  "src": "821:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_string_storage_$",
                                    "typeString": "mapping(string memory => string storage ref)"
                                  }
                                },
                                "id": 972,
                                "indexExpression": {
                                  "id": 971,
                                  "name": "_publicKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 949,
                                  "src": "835:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "821:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "815:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 968,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "815:5:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "815:32:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "848:6:3",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "815:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "858:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "815:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616464726573735f616c72656164795f72656769737465726564",
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "861:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c3afb8fc127c813bffdf8e09c019149e15fd8a2d418d993d85aca5e4767af8f",
                          "typeString": "literal_string \"address_already_registered\""
                        },
                        "value": "address_already_registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c3afb8fc127c813bffdf8e09c019149e15fd8a2d418d993d85aca5e4767af8f",
                          "typeString": "literal_string \"address_already_registered\""
                        }
                      ],
                      "id": 967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "807:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "807:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 979,
                  "nodeType": "ExpressionStatement",
                  "src": "807:83:3"
                },
                {
                  "assignments": [
                    982
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 982,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "914:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1030,
                      "src": "901:17:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                        "typeString": "struct UserRegistry.User"
                      },
                      "typeName": {
                        "id": 981,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 980,
                          "name": "User",
                          "nameLocations": [
                            "901:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 924,
                          "src": "901:4:3"
                        },
                        "referencedDeclaration": 924,
                        "src": "901:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                          "typeString": "struct UserRegistry.User"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 986,
                  "initialValue": {
                    "baseExpression": {
                      "id": 983,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "921:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$924_storage_$",
                        "typeString": "mapping(string memory => struct UserRegistry.User storage ref)"
                      }
                    },
                    "id": 985,
                    "indexExpression": {
                      "id": 984,
                      "name": "_nick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 947,
                      "src": "927:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "921:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$924_storage",
                      "typeString": "struct UserRegistry.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "901:32:3"
                },
                {
                  "expression": {
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 987,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "943:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                          "typeString": "struct UserRegistry.User storage pointer"
                        }
                      },
                      "id": 989,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "948:4:3",
                      "memberName": "nick",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 908,
                      "src": "943:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 990,
                      "name": "_nick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 947,
                      "src": "955:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "943:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "943:17:3"
                },
                {
                  "expression": {
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 993,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "970:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                          "typeString": "struct UserRegistry.User storage pointer"
                        }
                      },
                      "id": 995,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "975:10:3",
                      "memberName": "public_key",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 910,
                      "src": "970:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 996,
                      "name": "_publicKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "988:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "970:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 998,
                  "nodeType": "ExpressionStatement",
                  "src": "970:28:3"
                },
                {
                  "expression": {
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 999,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "1008:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                          "typeString": "struct UserRegistry.User storage pointer"
                        }
                      },
                      "id": 1001,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1013:15:3",
                      "memberName": "additional_data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 919,
                      "src": "1008:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1002,
                      "name": "_additionalData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "1031:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1008:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:38:3"
                },
                {
                  "expression": {
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1005,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "1056:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                          "typeString": "struct UserRegistry.User storage pointer"
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1061:6:3",
                      "memberName": "is_bot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 921,
                      "src": "1056:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1008,
                      "name": "_isBot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 953,
                      "src": "1070:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1056:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "1056:20:3"
                },
                {
                  "expression": {
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1011,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "1086:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                          "typeString": "struct UserRegistry.User storage pointer"
                        }
                      },
                      "id": 1013,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1091:6:3",
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 923,
                      "src": "1086:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1100:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1086:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:18:3"
                },
                {
                  "expression": {
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1017,
                        "name": "addressToNick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 933,
                        "src": "1115:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_string_storage_$",
                          "typeString": "mapping(string memory => string storage ref)"
                        }
                      },
                      "id": 1019,
                      "indexExpression": {
                        "id": 1018,
                        "name": "_publicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "1129:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1115:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1020,
                      "name": "_nick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 947,
                      "src": "1143:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1115:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:33:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1024,
                        "name": "_nick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "1179:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1025,
                        "name": "_publicKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "1186:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1023,
                      "name": "UserRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 939,
                      "src": "1164:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1164:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1027,
                  "nodeType": "EmitStatement",
                  "src": "1159:38:3"
                },
                {
                  "expression": {
                    "hexValue": "72656769737465725f73756363657373",
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1215:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_66691c77bf7a2e41a288a446851d8a4af7b1d24ef3e495b91821097f8830f76e",
                      "typeString": "literal_string \"register_success\""
                    },
                    "value": "register_success"
                  },
                  "functionReturnParameters": 957,
                  "id": 1029,
                  "nodeType": "Return",
                  "src": "1208:25:3"
                }
              ]
            },
            "functionSelector": "9ef1d46f",
            "id": 1031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerUser",
            "nameLocation": "563:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_nick",
                  "nameLocation": "599:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "585:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "_publicKey",
                  "nameLocation": "628:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "614:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "_additionalData",
                  "nameLocation": "662:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "648:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "_isBot",
                  "nameLocation": "692:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "687:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "575:129:3"
            },
            "returnParameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "721:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:15:3"
            },
            "scope": 1137,
            "src": "554:686:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1083,
              "nodeType": "Block",
              "src": "1318:316:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1039,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "1336:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$924_storage_$",
                              "typeString": "mapping(string memory => struct UserRegistry.User storage ref)"
                            }
                          },
                          "id": 1041,
                          "indexExpression": {
                            "id": 1040,
                            "name": "_nick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "1342:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1336:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$924_storage",
                            "typeString": "struct UserRegistry.User storage ref"
                          }
                        },
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1349:6:3",
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 923,
                        "src": "1336:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "757365725f6e6f745f6578697374",
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1357:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_497f46c4b4985e53064b6e02749b17b7ba059373f912e15aa36e11e280271439",
                          "typeString": "literal_string \"user_not_exist\""
                        },
                        "value": "user_not_exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_497f46c4b4985e53064b6e02749b17b7ba059373f912e15aa36e11e280271439",
                          "typeString": "literal_string \"user_not_exist\""
                        }
                      ],
                      "id": 1038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1328:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:46:3"
                },
                {
                  "assignments": [
                    1048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1048,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "1397:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1083,
                      "src": "1384:17:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                        "typeString": "struct UserRegistry.User"
                      },
                      "typeName": {
                        "id": 1047,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1046,
                          "name": "User",
                          "nameLocations": [
                            "1384:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 924,
                          "src": "1384:4:3"
                        },
                        "referencedDeclaration": 924,
                        "src": "1384:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                          "typeString": "struct UserRegistry.User"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1052,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1049,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "1404:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$924_storage_$",
                        "typeString": "mapping(string memory => struct UserRegistry.User storage ref)"
                      }
                    },
                    "id": 1051,
                    "indexExpression": {
                      "id": 1050,
                      "name": "_nick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1033,
                      "src": "1410:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1404:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$924_storage",
                      "typeString": "struct UserRegistry.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1384:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1435:30:3",
                        "subExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 1054,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1048,
                              "src": "1436:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                                "typeString": "struct UserRegistry.User storage pointer"
                              }
                            },
                            "id": 1055,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1441:14:3",
                            "memberName": "hasExpertField",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 917,
                            "src": "1436:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 1057,
                          "indexExpression": {
                            "id": 1056,
                            "name": "_fieldId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1035,
                            "src": "1456:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1436:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6669656c645f616c72656164795f6164646564",
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1467:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4756e3b3941f468432e612a5ec678993ee715f0af1fdc49128f1083723793985",
                          "typeString": "literal_string \"field_already_added\""
                        },
                        "value": "field_already_added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4756e3b3941f468432e612a5ec678993ee715f0af1fdc49128f1083723793985",
                          "typeString": "literal_string \"field_already_added\""
                        }
                      ],
                      "id": 1053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1427:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1061,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1067,
                        "name": "_fieldId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "1523:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1062,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "1500:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                            "typeString": "struct UserRegistry.User storage pointer"
                          }
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1505:12:3",
                        "memberName": "expertFields",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 913,
                        "src": "1500:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1518:4:3",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1500:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1500:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:32:3"
                },
                {
                  "expression": {
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 1070,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "1542:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                            "typeString": "struct UserRegistry.User storage pointer"
                          }
                        },
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1547:14:3",
                        "memberName": "hasExpertField",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 917,
                        "src": "1542:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1074,
                      "indexExpression": {
                        "id": 1072,
                        "name": "_fieldId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "1562:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1542:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1574:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1542:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:36:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1079,
                        "name": "_nick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "1611:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1080,
                        "name": "_fieldId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "1618:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1078,
                      "name": "ExpertFieldAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 945,
                      "src": "1594:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1594:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1082,
                  "nodeType": "EmitStatement",
                  "src": "1589:38:3"
                }
              ]
            },
            "functionSelector": "037a93d7",
            "id": 1084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addExpertField",
            "nameLocation": "1255:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "_nick",
                  "nameLocation": "1284:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "1270:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "_fieldId",
                  "nameLocation": "1299:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "1291:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1291:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:39:3"
            },
            "returnParameters": {
              "id": 1037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1318:0:3"
            },
            "scope": 1137,
            "src": "1246:388:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "1890:251:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1099,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "1908:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$924_storage_$",
                              "typeString": "mapping(string memory => struct UserRegistry.User storage ref)"
                            }
                          },
                          "id": 1101,
                          "indexExpression": {
                            "id": 1100,
                            "name": "_nick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "1914:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1908:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$924_storage",
                            "typeString": "struct UserRegistry.User storage ref"
                          }
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1921:6:3",
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 923,
                        "src": "1908:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "757365725f6e6f745f6578697374",
                        "id": 1103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1929:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_497f46c4b4985e53064b6e02749b17b7ba059373f912e15aa36e11e280271439",
                          "typeString": "literal_string \"user_not_exist\""
                        },
                        "value": "user_not_exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_497f46c4b4985e53064b6e02749b17b7ba059373f912e15aa36e11e280271439",
                          "typeString": "literal_string \"user_not_exist\""
                        }
                      ],
                      "id": 1098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1900:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1105,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:46:3"
                },
                {
                  "assignments": [
                    1108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1108,
                      "mutability": "mutable",
                      "name": "user",
                      "nameLocation": "1969:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "1956:17:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                        "typeString": "struct UserRegistry.User"
                      },
                      "typeName": {
                        "id": 1107,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1106,
                          "name": "User",
                          "nameLocations": [
                            "1956:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 924,
                          "src": "1956:4:3"
                        },
                        "referencedDeclaration": 924,
                        "src": "1956:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                          "typeString": "struct UserRegistry.User"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1112,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1109,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "1976:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_User_$924_storage_$",
                        "typeString": "mapping(string memory => struct UserRegistry.User storage ref)"
                      }
                    },
                    "id": 1111,
                    "indexExpression": {
                      "id": 1110,
                      "name": "_nick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "1982:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1976:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_User_$924_storage",
                      "typeString": "struct UserRegistry.User storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1956:32:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 1113,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1108,
                          "src": "2019:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                            "typeString": "struct UserRegistry.User storage pointer"
                          }
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2024:10:3",
                        "memberName": "public_key",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 910,
                        "src": "2019:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 1115,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1108,
                          "src": "2048:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                            "typeString": "struct UserRegistry.User storage pointer"
                          }
                        },
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2053:12:3",
                        "memberName": "expertFields",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 913,
                        "src": "2048:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 1117,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1108,
                          "src": "2079:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                            "typeString": "struct UserRegistry.User storage pointer"
                          }
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2084:15:3",
                        "memberName": "additional_data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 919,
                        "src": "2079:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 1119,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1108,
                          "src": "2113:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$924_storage_ptr",
                            "typeString": "struct UserRegistry.User storage pointer"
                          }
                        },
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2118:6:3",
                        "memberName": "is_bot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 921,
                        "src": "2113:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1121,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2005:129:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_array$_t_uint256_$dyn_storage_$_t_string_storage_$_t_bool_$",
                      "typeString": "tuple(string storage ref,uint256[] storage ref,string storage ref,bool)"
                    }
                  },
                  "functionReturnParameters": 1097,
                  "id": 1122,
                  "nodeType": "Return",
                  "src": "1998:136:3"
                }
              ]
            },
            "functionSelector": "7c9b7fdd",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserInfo",
            "nameLocation": "1649:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "_nick",
                  "nameLocation": "1675:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1661:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1660:21:3"
            },
            "returnParameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "public_key",
                  "nameLocation": "1754:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1740:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "expertFields",
                  "nameLocation": "1795:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1778:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1090,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1778:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1091,
                    "nodeType": "ArrayTypeName",
                    "src": "1778:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1094,
                  "mutability": "mutable",
                  "name": "additional_data",
                  "nameLocation": "1835:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1821:29:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1093,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1821:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1096,
                  "mutability": "mutable",
                  "name": "is_bot",
                  "nameLocation": "1869:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1864:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1095,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1726:159:3"
            },
            "scope": 1137,
            "src": "1640:501:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "2235:47:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1131,
                      "name": "addressToNick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "2252:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_string_storage_$",
                        "typeString": "mapping(string memory => string storage ref)"
                      }
                    },
                    "id": 1133,
                    "indexExpression": {
                      "id": 1132,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "2266:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2252:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1130,
                  "id": 1134,
                  "nodeType": "Return",
                  "src": "2245:30:3"
                }
              ]
            },
            "functionSelector": "21c7e7d8",
            "id": 1136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNickByAddress",
            "nameLocation": "2156:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2187:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "2173:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2172:24:3"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "2220:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2219:15:3"
            },
            "scope": 1137,
            "src": "2147:135:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1138,
        "src": "57:2227:3",
        "usedErrors": [],
        "usedEvents": [
          939,
          945
        ]
      }
    ],
    "src": "32:2253:3"
  },
  "bytecode": "6080604052348015600f57600080fd5b50610b808061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063037a93d71461005157806321c7e7d8146100665780637c9b7fdd1461008f5780639ef1d46f146100b2575b600080fd5b61006461005f366004610787565b6100c5565b005b6100796100743660046107cc565b610222565b6040516100869190610859565b60405180910390f35b6100a261009d3660046107cc565b6102d2565b6040516100869493929190610873565b6100796100c03660046108ea565b6104fa565b6000826040516100d59190610996565b9081526040519081900360200190206005015460ff610100909104166101335760405162461bcd60e51b815260206004820152600e60248201526d1d5cd95c97db9bdd17d95e1a5cdd60921b60448201526064015b60405180910390fd5b600080836040516101449190610996565b908152604080516020928190038301902060008581526003820190935291205490915060ff16156101ad5760405162461bcd60e51b8152602060048201526013602482015272199a595b1917d85b1c9958591e57d859191959606a1b604482015260640161012a565b600281018054600181810183556000928352602080842090920185905584835260038401909152604091829020805460ff19169091179055517fe8c8d70a47cfd9e36447bfef4703abc190a6ea8608550a2c7fd4f0308e1365a99061021590859085906109b2565b60405180910390a1505050565b60606001826040516102349190610996565b9081526020016040518091039020805461024d906109d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610279906109d4565b80156102c65780601f1061029b576101008083540402835291602001916102c6565b820191906000526020600020905b8154815290600101906020018083116102a957829003601f168201915b50505050509050919050565b6060806060600080856040516102e89190610996565b9081526040519081900360200190206005015460ff610100909104166103415760405162461bcd60e51b815260206004820152600e60248201526d1d5cd95c97db9bdd17d95e1a5cdd60921b604482015260640161012a565b600080866040516103529190610996565b908152602001604051809103902090508060010181600201826004018360050160009054906101000a900460ff1683805461038c906109d4565b80601f01602080910402602001604051908101604052809291908181526020018280546103b8906109d4565b80156104055780601f106103da57610100808354040283529160200191610405565b820191906000526020600020905b8154815290600101906020018083116103e857829003601f168201915b505050505093508280548060200260200160405190810160405280929190818152602001828054801561045757602002820191906000526020600020905b815481526020019060010190808311610443575b5050505050925081805461046a906109d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610496906109d4565b80156104e35780601f106104b8576101008083540402835291602001916104e3565b820191906000526020600020905b8154815290600101906020018083116104c657829003601f168201915b505050505091509450945094509450509193509193565b606060008560405161050c9190610996565b9081526040519081900360200190206005015460ff610100909104161561056a5760405162461bcd60e51b81526020600482015260126024820152713734b1b5afb0b63932b0b23cafba30b5b2b760711b604482015260640161012a565b60018460405161057a9190610996565b90815260200160405180910390208054610593906109d4565b1590506105e25760405162461bcd60e51b815260206004820152601a60248201527f616464726573735f616c72656164795f72656769737465726564000000000000604482015260640161012a565b600080866040516105f39190610996565b90815260405190819003602001902090508061060f8782610a5d565b506001810161061e8682610a5d565b506004810161062d8582610a5d565b5060058101805461ff00198515151661ffff1990911617610100179055604051869060019061065d908890610996565b908152602001604051809103902090816106779190610a5d565b507f996d7324173609959370942b1ee1b743dc623b3d50459e66c1d55df55e5a9f3786866040516106a9929190610b1c565b60405180910390a1505060408051808201909152601081526f72656769737465725f7375636365737360801b6020820152949350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261070957600080fd5b813567ffffffffffffffff811115610723576107236106e2565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610752576107526106e2565b60405281815283820160200185101561076a57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561079a57600080fd5b823567ffffffffffffffff8111156107b157600080fd5b6107bd858286016106f8565b95602094909401359450505050565b6000602082840312156107de57600080fd5b813567ffffffffffffffff8111156107f557600080fd5b610801848285016106f8565b949350505050565b60005b8381101561082457818101518382015260200161080c565b50506000910152565b60008151808452610845816020860160208601610809565b601f01601f19169290920160200192915050565b60208152600061086c602083018461082d565b9392505050565b608081526000610886608083018761082d565b828103602084015280865180835260208301915060208801925060005b818110156108c15783518352602093840193909201916001016108a3565b505083810360408501526108d5818761082d565b92505050821515606083015295945050505050565b6000806000806080858703121561090057600080fd5b843567ffffffffffffffff81111561091757600080fd5b610923878288016106f8565b945050602085013567ffffffffffffffff81111561094057600080fd5b61094c878288016106f8565b935050604085013567ffffffffffffffff81111561096957600080fd5b610975878288016106f8565b9250506060850135801515811461098b57600080fd5b939692955090935050565b600082516109a8818460208701610809565b9190910192915050565b6040815260006109c5604083018561082d565b90508260208301529392505050565b600181811c908216806109e857607f821691505b602082108103610a0857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a5857806000526020600020601f840160051c81016020851015610a355750805b601f840160051c820191505b81811015610a555760008155600101610a41565b50505b505050565b815167ffffffffffffffff811115610a7757610a776106e2565b610a8b81610a8584546109d4565b84610a0e565b6020601f821160018114610abf5760008315610aa75750848201515b600019600385901b1c1916600184901b178455610a55565b600084815260208120601f198516915b82811015610aef5787850151825560209485019460019092019101610acf565b5084821015610b0d5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b604081526000610b2f604083018561082d565b8281036020840152610b41818561082d565b9594505050505056fea2646970667358221220e2c95f88783366b9dafd2d82ae9a7efea81527f5737d60b84e7d22e69aac499c64736f6c634300081c0033",
  "bytecodeSha1": "09d888cfbd90b01085ea481d413a1a7777975fae",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.28+commit.7893614a"
  },
  "contractName": "UserRegistry",
  "coverageMap": {
    "branches": {
      "3": {
        "UserRegistry.addExpertField": {
          "18": [
            1336,
            1355,
            true
          ],
          "19": [
            1435,
            1465,
            true
          ]
        },
        "UserRegistry.getUserInfo": {
          "20": [
            1908,
            1927,
            true
          ]
        },
        "UserRegistry.registerUser": {
          "21": [
            754,
            774,
            true
          ],
          "22": [
            815,
            859,
            true
          ]
        }
      }
    },
    "statements": {
      "3": {
        "UserRegistry.addExpertField": {
          "0": [
            1328,
            1374
          ],
          "1": [
            1427,
            1489
          ],
          "2": [
            1500,
            1532
          ],
          "3": [
            1542,
            1578
          ],
          "4": [
            1589,
            1627
          ]
        },
        "UserRegistry.getNickByAddress": {
          "5": [
            2245,
            2275
          ]
        },
        "UserRegistry.getUserInfo": {
          "6": [
            1900,
            1946
          ],
          "7": [
            1998,
            2134
          ]
        },
        "UserRegistry.registerUser": {
          "8": [
            746,
            797
          ],
          "9": [
            807,
            890
          ],
          "10": [
            943,
            960
          ],
          "11": [
            970,
            998
          ],
          "12": [
            1008,
            1046
          ],
          "13": [
            1056,
            1076
          ],
          "14": [
            1086,
            1104
          ],
          "15": [
            1115,
            1148
          ],
          "16": [
            1159,
            1197
          ],
          "17": [
            1208,
            1233
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063037a93d71461005157806321c7e7d8146100665780637c9b7fdd1461008f5780639ef1d46f146100b2575b600080fd5b61006461005f366004610787565b6100c5565b005b6100796100743660046107cc565b610222565b6040516100869190610859565b60405180910390f35b6100a261009d3660046107cc565b6102d2565b6040516100869493929190610873565b6100796100c03660046108ea565b6104fa565b6000826040516100d59190610996565b9081526040519081900360200190206005015460ff610100909104166101335760405162461bcd60e51b815260206004820152600e60248201526d1d5cd95c97db9bdd17d95e1a5cdd60921b60448201526064015b60405180910390fd5b600080836040516101449190610996565b908152604080516020928190038301902060008581526003820190935291205490915060ff16156101ad5760405162461bcd60e51b8152602060048201526013602482015272199a595b1917d85b1c9958591e57d859191959606a1b604482015260640161012a565b600281018054600181810183556000928352602080842090920185905584835260038401909152604091829020805460ff19169091179055517fe8c8d70a47cfd9e36447bfef4703abc190a6ea8608550a2c7fd4f0308e1365a99061021590859085906109b2565b60405180910390a1505050565b60606001826040516102349190610996565b9081526020016040518091039020805461024d906109d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610279906109d4565b80156102c65780601f1061029b576101008083540402835291602001916102c6565b820191906000526020600020905b8154815290600101906020018083116102a957829003601f168201915b50505050509050919050565b6060806060600080856040516102e89190610996565b9081526040519081900360200190206005015460ff610100909104166103415760405162461bcd60e51b815260206004820152600e60248201526d1d5cd95c97db9bdd17d95e1a5cdd60921b604482015260640161012a565b600080866040516103529190610996565b908152602001604051809103902090508060010181600201826004018360050160009054906101000a900460ff1683805461038c906109d4565b80601f01602080910402602001604051908101604052809291908181526020018280546103b8906109d4565b80156104055780601f106103da57610100808354040283529160200191610405565b820191906000526020600020905b8154815290600101906020018083116103e857829003601f168201915b505050505093508280548060200260200160405190810160405280929190818152602001828054801561045757602002820191906000526020600020905b815481526020019060010190808311610443575b5050505050925081805461046a906109d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610496906109d4565b80156104e35780601f106104b8576101008083540402835291602001916104e3565b820191906000526020600020905b8154815290600101906020018083116104c657829003601f168201915b505050505091509450945094509450509193509193565b606060008560405161050c9190610996565b9081526040519081900360200190206005015460ff610100909104161561056a5760405162461bcd60e51b81526020600482015260126024820152713734b1b5afb0b63932b0b23cafba30b5b2b760711b604482015260640161012a565b60018460405161057a9190610996565b90815260200160405180910390208054610593906109d4565b1590506105e25760405162461bcd60e51b815260206004820152601a60248201527f616464726573735f616c72656164795f72656769737465726564000000000000604482015260640161012a565b600080866040516105f39190610996565b90815260405190819003602001902090508061060f8782610a5d565b506001810161061e8682610a5d565b506004810161062d8582610a5d565b5060058101805461ff00198515151661ffff1990911617610100179055604051869060019061065d908890610996565b908152602001604051809103902090816106779190610a5d565b507f996d7324173609959370942b1ee1b743dc623b3d50459e66c1d55df55e5a9f3786866040516106a9929190610b1c565b60405180910390a1505060408051808201909152601081526f72656769737465725f7375636365737360801b6020820152949350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261070957600080fd5b813567ffffffffffffffff811115610723576107236106e2565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610752576107526106e2565b60405281815283820160200185101561076a57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561079a57600080fd5b823567ffffffffffffffff8111156107b157600080fd5b6107bd858286016106f8565b95602094909401359450505050565b6000602082840312156107de57600080fd5b813567ffffffffffffffff8111156107f557600080fd5b610801848285016106f8565b949350505050565b60005b8381101561082457818101518382015260200161080c565b50506000910152565b60008151808452610845816020860160208601610809565b601f01601f19169290920160200192915050565b60208152600061086c602083018461082d565b9392505050565b608081526000610886608083018761082d565b828103602084015280865180835260208301915060208801925060005b818110156108c15783518352602093840193909201916001016108a3565b505083810360408501526108d5818761082d565b92505050821515606083015295945050505050565b6000806000806080858703121561090057600080fd5b843567ffffffffffffffff81111561091757600080fd5b610923878288016106f8565b945050602085013567ffffffffffffffff81111561094057600080fd5b61094c878288016106f8565b935050604085013567ffffffffffffffff81111561096957600080fd5b610975878288016106f8565b9250506060850135801515811461098b57600080fd5b939692955090935050565b600082516109a8818460208701610809565b9190910192915050565b6040815260006109c5604083018561082d565b90508260208301529392505050565b600181811c908216806109e857607f821691505b602082108103610a0857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a5857806000526020600020601f840160051c81016020851015610a355750805b601f840160051c820191505b81811015610a555760008155600101610a41565b50505b505050565b815167ffffffffffffffff811115610a7757610a776106e2565b610a8b81610a8584546109d4565b84610a0e565b6020601f821160018114610abf5760008315610aa75750848201515b600019600385901b1c1916600184901b178455610a55565b600084815260208120601f198516915b82811015610aef5787850151825560209485019460019092019101610acf565b5084821015610b0d5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b604081526000610b2f604083018561082d565b8281036020840152610b41818561082d565b9594505050505056fea2646970667358221220e2c95f88783366b9dafd2d82ae9a7efea81527f5737d60b84e7d22e69aac499c64736f6c634300081c0033",
  "deployedSourceMap": "57:2227:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:388;;;;;;:::i;:::-;;:::i;:::-;;2147:135;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1640:501;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;554:686::-;;;;;;:::i;:::-;;:::i;1246:388::-;1336:5;1342;1336:12;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;;;;;;;;;1328:46;;;;-1:-1:-1;;;1328:46:3;;4733:2:4;1328:46:3;;;4715:21:4;4772:2;4752:18;;;4745:30;-1:-1:-1;;;4791:18:4;;;4784:44;4845:18;;1328:46:3;;;;;;;;;1384:17;1404:5;1410;1404:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1436:29;;;;:19;;;:29;;;;;;1404:12;;-1:-1:-1;1436:29:3;;1435:30;1427:62;;;;-1:-1:-1;;;1427:62:3;;5076:2:4;1427:62:3;;;5058:21:4;5115:2;5095:18;;;5088:30;-1:-1:-1;;;5134:18:4;;;5127:49;5193:18;;1427:62:3;4874:343:4;1427:62:3;1500:17;;;:32;;;;;;;;-1:-1:-1;1500:32:3;;;;;;;;;;;;;1542:29;;;:19;;;:29;;;;;;;;:36;;-1:-1:-1;;1542:36:3;;;;;;1594:33;;;;;1611:5;;1523:8;;1594:33;:::i;:::-;;;;;;;;1318:316;1246:388;;:::o;2147:135::-;2220:13;2252;2266:8;2252:23;;;;;;:::i;:::-;;;;;;;;;;;;;2245:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2147:135;;;:::o;1640:501::-;1740:24;1778:29;1821;1864:11;1908:5;1914;1908:12;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;;;;;;;;;1900:46;;;;-1:-1:-1;;;1900:46:3;;4733:2:4;1900:46:3;;;4715:21:4;4772:2;4752:18;;;4745:30;-1:-1:-1;;;4791:18:4;;;4784:44;4845:18;;1900:46:3;4531:338:4;1900:46:3;1956:17;1976:5;1982;1976:12;;;;;;:::i;:::-;;;;;;;;;;;;;1956:32;;2019:4;:15;;2048:4;:17;;2079:4;:20;;2113:4;:11;;;;;;;;;;;;1998:136;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1640:501;;;;;:::o;554:686::-;721:13;755:5;761;755:12;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;;;;;;;;;754:20;746:51;;;;-1:-1:-1;;;746:51:3;;6105:2:4;746:51:3;;;6087:21:4;6144:2;6124:18;;;6117:30;-1:-1:-1;;;6163:18:4;;;6156:48;6221:18;;746:51:3;5903:342:4;746:51:3;821:13;835:10;821:25;;;;;;:::i;:::-;;;;;;;;;;;;;815:39;;;;;:::i;:::-;:44;;-1:-1:-1;807:83:3;;;;-1:-1:-1;;;807:83:3;;6452:2:4;807:83:3;;;6434:21:4;6491:2;6471:18;;;6464:30;6530:28;6510:18;;;6503:56;6576:18;;807:83:3;6250:350:4;807:83:3;901:17;921:5;927;921:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;921:12:3;943:17;955:5;921:12;943:17;:::i;:::-;-1:-1:-1;970:15:3;;;:28;988:10;970:15;:28;:::i;:::-;-1:-1:-1;1008:20:3;;;:38;1031:15;1008:20;:38;:::i;:::-;-1:-1:-1;1056:11:3;;;:20;;-1:-1:-1;;1056:20:3;;;1086:18;-1:-1:-1;;1086:18:3;;;;1056:20;1086:18;;;1115:25;;1143:5;;1056:20;;1115:25;;1129:10;;1115:25;:::i;:::-;;;;;;;;;;;;;:33;;;;;;:::i;:::-;;1164;1179:5;1186:10;1164:33;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;1208:25:3;;;;;;;;;;;;-1:-1:-1;;;1208:25:3;;;;554:686;;;;;;:::o;14:127:4:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:726;189:5;242:3;235:4;227:6;223:17;219:27;209:55;;260:1;257;250:12;209:55;300:6;287:20;330:18;322:6;319:30;316:56;;;352:18;;:::i;:::-;401:2;395:9;493:2;455:17;;-1:-1:-1;;451:31:4;;;484:2;447:40;443:54;431:67;;528:18;513:34;;549:22;;;510:62;507:88;;;575:18;;:::i;:::-;611:2;604:22;635;;;676:19;;;697:4;672:30;669:39;-1:-1:-1;666:59:4;;;721:1;718;711:12;666:59;785:6;778:4;770:6;766:17;759:4;751:6;747:17;734:58;840:1;812:19;;;833:4;808:30;801:41;;;;816:6;146:726;-1:-1:-1;;;146:726:4:o;877:390::-;955:6;963;1016:2;1004:9;995:7;991:23;987:32;984:52;;;1032:1;1029;1022:12;984:52;1072:9;1059:23;1105:18;1097:6;1094:30;1091:50;;;1137:1;1134;1127:12;1091:50;1160;1202:7;1193:6;1182:9;1178:22;1160:50;:::i;:::-;1150:60;1257:2;1242:18;;;;1229:32;;-1:-1:-1;;;;877:390:4:o;1272:322::-;1341:6;1394:2;1382:9;1373:7;1369:23;1365:32;1362:52;;;1410:1;1407;1400:12;1362:52;1450:9;1437:23;1483:18;1475:6;1472:30;1469:50;;;1515:1;1512;1505:12;1469:50;1538;1580:7;1571:6;1560:9;1556:22;1538:50;:::i;:::-;1528:60;1272:322;-1:-1:-1;;;;1272:322:4:o;1599:250::-;1684:1;1694:113;1708:6;1705:1;1702:13;1694:113;;;1784:11;;;1778:18;1765:11;;;1758:39;1730:2;1723:10;1694:113;;;-1:-1:-1;;1841:1:4;1823:16;;1816:27;1599:250::o;1854:271::-;1896:3;1934:5;1928:12;1961:6;1956:3;1949:19;1977:76;2046:6;2039:4;2034:3;2030:14;2023:4;2016:5;2012:16;1977:76;:::i;:::-;2107:2;2086:15;-1:-1:-1;;2082:29:4;2073:39;;;;2114:4;2069:50;;1854:271;-1:-1:-1;;1854:271:4:o;2130:220::-;2279:2;2268:9;2261:21;2242:4;2299:45;2340:2;2329:9;2325:18;2317:6;2299:45;:::i;:::-;2291:53;2130:220;-1:-1:-1;;;2130:220:4:o;2355:956::-;2652:3;2641:9;2634:22;2615:4;2679:46;2720:3;2709:9;2705:19;2697:6;2679:46;:::i;:::-;2773:9;2765:6;2761:22;2756:2;2745:9;2741:18;2734:50;2804:6;2839;2833:13;2870:6;2862;2855:22;2905:2;2897:6;2893:15;2886:22;;2943:2;2935:6;2931:15;2917:29;;2964:1;2974:169;2988:6;2985:1;2982:13;2974:169;;;3049:13;;3037:26;;3092:2;3118:15;;;;3083:12;;;;3010:1;3003:9;2974:169;;;2978:3;;3188:9;3183:3;3179:19;3174:2;3163:9;3159:18;3152:47;3216:30;3242:3;3234:6;3216:30;:::i;:::-;3208:38;;;;3296:6;3289:14;3282:22;3277:2;3266:9;3262:18;3255:50;2355:956;;;;;;;:::o;3316:916::-;3429:6;3437;3445;3453;3506:3;3494:9;3485:7;3481:23;3477:33;3474:53;;;3523:1;3520;3513:12;3474:53;3563:9;3550:23;3596:18;3588:6;3585:30;3582:50;;;3628:1;3625;3618:12;3582:50;3651;3693:7;3684:6;3673:9;3669:22;3651:50;:::i;:::-;3641:60;;;3754:2;3743:9;3739:18;3726:32;3783:18;3773:8;3770:32;3767:52;;;3815:1;3812;3805:12;3767:52;3838;3882:7;3871:8;3860:9;3856:24;3838:52;:::i;:::-;3828:62;;;3943:2;3932:9;3928:18;3915:32;3972:18;3962:8;3959:32;3956:52;;;4004:1;4001;3994:12;3956:52;4027;4071:7;4060:8;4049:9;4045:24;4027:52;:::i;:::-;4017:62;;;4129:2;4118:9;4114:18;4101:32;4176:5;4169:13;4162:21;4155:5;4152:32;4142:60;;4198:1;4195;4188:12;4142:60;3316:916;;;;-1:-1:-1;3316:916:4;;-1:-1:-1;;3316:916:4:o;4237:289::-;4368:3;4406:6;4400:13;4422:66;4481:6;4476:3;4469:4;4461:6;4457:17;4422:66;:::i;:::-;4504:16;;;;;4237:289;-1:-1:-1;;4237:289:4:o;5222:291::-;5399:2;5388:9;5381:21;5362:4;5419:45;5460:2;5449:9;5445:18;5437:6;5419:45;:::i;:::-;5411:53;;5500:6;5495:2;5484:9;5480:18;5473:34;5222:291;;;;;:::o;5518:380::-;5597:1;5593:12;;;;5640;;;5661:61;;5715:4;5707:6;5703:17;5693:27;;5661:61;5768:2;5760:6;5757:14;5737:18;5734:38;5731:161;;5814:10;5809:3;5805:20;5802:1;5795:31;5849:4;5846:1;5839:15;5877:4;5874:1;5867:15;5731:161;;5518:380;;;:::o;6731:518::-;6833:2;6828:3;6825:11;6822:421;;;6869:5;6866:1;6859:16;6913:4;6910:1;6900:18;6983:2;6971:10;6967:19;6964:1;6960:27;6954:4;6950:38;7019:4;7007:10;7004:20;7001:47;;;-1:-1:-1;7042:4:4;7001:47;7097:2;7092:3;7088:12;7085:1;7081:20;7075:4;7071:31;7061:41;;7152:81;7170:2;7163:5;7160:13;7152:81;;;7229:1;7215:16;;7196:1;7185:13;7152:81;;;7156:3;;6822:421;6731:518;;;:::o;7425:1299::-;7551:3;7545:10;7578:18;7570:6;7567:30;7564:56;;;7600:18;;:::i;:::-;7629:97;7719:6;7679:38;7711:4;7705:11;7679:38;:::i;:::-;7673:4;7629:97;:::i;:::-;7775:4;7806:2;7795:14;;7823:1;7818:649;;;;8511:1;8528:6;8525:89;;;-1:-1:-1;8580:19:4;;;8574:26;8525:89;-1:-1:-1;;7382:1:4;7378:11;;;7374:24;7370:29;7360:40;7406:1;7402:11;;;7357:57;8627:81;;7788:930;;7818:649;6678:1;6671:14;;;6715:4;6702:18;;-1:-1:-1;;7854:20:4;;;7972:222;7986:7;7983:1;7980:14;7972:222;;;8068:19;;;8062:26;8047:42;;8175:4;8160:20;;;;8128:1;8116:14;;;;8002:12;7972:222;;;7976:3;8222:6;8213:7;8210:19;8207:201;;;8283:19;;;8277:26;-1:-1:-1;;8366:1:4;8362:14;;;8378:3;8358:24;8354:37;8350:42;8335:58;8320:74;;8207:201;-1:-1:-1;;;;8454:1:4;8438:14;;;8434:22;8421:36;;-1:-1:-1;7425:1299:4:o;8729:383::-;8926:2;8915:9;8908:21;8889:4;8952:45;8993:2;8982:9;8978:18;8970:6;8952:45;:::i;:::-;9045:9;9037:6;9033:22;9028:2;9017:9;9013:18;9006:50;9073:33;9099:6;9091;9073:33;:::i;:::-;9065:41;8729:383;-1:-1:-1;;;;;8729:383:4:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    2284
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37A93D7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x21C7E7D8 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x7C9B7FDD EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x9EF1D46F EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x787 JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA2 PUSH2 0x9D CALLDATASIZE PUSH1 0x4 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x873 JUMP JUMPDEST PUSH2 0x79 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x8EA JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND PUSH2 0x133 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1D5CD95C97DB9BDD17D95E1A5CDD PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 DUP3 ADD SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x199A595B1917D85B1C9958591E57D859191959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12A JUMP JUMPDEST PUSH1 0x2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD DUP6 SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP5 ADD SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH32 0xE8C8D70A47CFD9E36447BFEF4703ABC190A6EA8608550A2C7FD4F0308E1365A9 SWAP1 PUSH2 0x215 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x9B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x24D SWAP1 PUSH2 0x9D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x279 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x29B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1D5CD95C97DB9BDD17D95E1A5CDD PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD DUP2 PUSH1 0x2 ADD DUP3 PUSH1 0x4 ADD DUP4 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 DUP1 SLOAD PUSH2 0x38C SWAP1 PUSH2 0x9D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B8 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x405 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x405 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP4 POP DUP3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x457 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x443 JUMPI JUMPDEST POP POP POP POP POP SWAP3 POP DUP2 DUP1 SLOAD PUSH2 0x46A SWAP1 PUSH2 0x9D4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x496 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP6 PUSH1 0x40 MLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO PUSH2 0x56A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x3734B1B5AFB0B63932B0B23CAFBA30B5B2B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12A JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x593 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x5E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616464726573735F616C72656164795F72656769737465726564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x12A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x40 MLOAD PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SWAP1 POP DUP1 PUSH2 0x60F DUP8 DUP3 PUSH2 0xA5D JUMP JUMPDEST POP PUSH1 0x1 DUP2 ADD PUSH2 0x61E DUP7 DUP3 PUSH2 0xA5D JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x62D DUP6 DUP3 PUSH2 0xA5D JUMP JUMPDEST POP PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT DUP6 ISZERO ISZERO AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x65D SWAP1 DUP9 SWAP1 PUSH2 0x996 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 DUP2 PUSH2 0x677 SWAP2 SWAP1 PUSH2 0xA5D JUMP JUMPDEST POP PUSH32 0x996D7324173609959370942B1EE1B743DC623B3D50459E66C1D55DF55E5A9F37 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x6A9 SWAP3 SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x72656769737465725F73756363657373 PUSH1 0x80 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x723 JUMPI PUSH2 0x723 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x752 JUMPI PUSH2 0x752 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BD DUP6 DUP3 DUP7 ADD PUSH2 0x6F8 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x801 DUP5 DUP3 DUP6 ADD PUSH2 0x6F8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x824 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x80C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x845 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x809 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x86C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x82D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x886 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x82D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE DUP1 DUP7 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 POP PUSH1 0x20 DUP9 ADD SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8C1 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x8A3 JUMP JUMPDEST POP POP DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x8D5 DUP2 DUP8 PUSH2 0x82D JUMP JUMPDEST SWAP3 POP POP POP DUP3 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x900 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x923 DUP8 DUP3 DUP9 ADD PUSH2 0x6F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x94C DUP8 DUP3 DUP9 ADD PUSH2 0x6F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x975 DUP8 DUP3 DUP9 ADD PUSH2 0x6F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x98B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x9A8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x809 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9C5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x82D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9E8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA08 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA58 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xA35 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA41 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA77 JUMPI PUSH2 0xA77 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0xA8B DUP2 PUSH2 0xA85 DUP5 SLOAD PUSH2 0x9D4 JUMP JUMPDEST DUP5 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0xABF JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0xAA7 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAEF JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xACF JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0xB0D JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB2F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x82D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xB41 DUP2 DUP6 PUSH2 0x82D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0xC9 PUSH0 DUP9 PUSH25 0x3366B9DAFD2D82AE9A7EFEA81527F5737D60B84E7D22E69AAC BLOBHASH SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        2284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x37A93D7"
    },
    "38": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "EQ",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x21C7E7D8"
    },
    "49": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7C9B7FDD"
    },
    "60": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8F"
    },
    "64": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9EF1D46F"
    },
    "71": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB2"
    },
    "75": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        57,
        2284
      ],
      "op": "REVERT",
      "path": "3"
    },
    "81": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "82": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64"
    },
    "85": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F"
    },
    "88": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "89": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "91": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x787"
    },
    "94": {
      "fn": "UserRegistry.addExpertField",
      "jump": "i",
      "offset": [
        1246,
        1634
      ],
      "op": "JUMP",
      "path": "3"
    },
    "95": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "96": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5"
    },
    "99": {
      "fn": "UserRegistry.addExpertField",
      "jump": "i",
      "offset": [
        1246,
        1634
      ],
      "op": "JUMP",
      "path": "3"
    },
    "100": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "101": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "STOP",
      "path": "3"
    },
    "102": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "103": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79"
    },
    "106": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x74"
    },
    "109": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "110": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "112": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7CC"
    },
    "115": {
      "fn": "UserRegistry.getNickByAddress",
      "jump": "i",
      "offset": [
        2147,
        2282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "116": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "117": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x222"
    },
    "120": {
      "fn": "UserRegistry.getNickByAddress",
      "jump": "i",
      "offset": [
        2147,
        2282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "121": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "122": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "124": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "125": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86"
    },
    "128": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "129": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "130": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x859"
    },
    "133": {
      "fn": "UserRegistry.getNickByAddress",
      "jump": "i",
      "offset": [
        2147,
        2282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "134": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "135": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "137": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "138": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "139": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "140": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "SUB",
      "path": "3"
    },
    "141": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "142": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "RETURN",
      "path": "3"
    },
    "143": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "144": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2"
    },
    "147": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D"
    },
    "150": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "151": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "153": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7CC"
    },
    "156": {
      "fn": "UserRegistry.getUserInfo",
      "jump": "i",
      "offset": [
        1640,
        2141
      ],
      "op": "JUMP",
      "path": "3"
    },
    "157": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "158": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D2"
    },
    "161": {
      "fn": "UserRegistry.getUserInfo",
      "jump": "i",
      "offset": [
        1640,
        2141
      ],
      "op": "JUMP",
      "path": "3"
    },
    "162": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "163": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "165": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "166": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86"
    },
    "169": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "170": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "171": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "172": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "173": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "174": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x873"
    },
    "177": {
      "fn": "UserRegistry.getUserInfo",
      "jump": "i",
      "offset": [
        1640,
        2141
      ],
      "op": "JUMP",
      "path": "3"
    },
    "178": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "179": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79"
    },
    "182": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC0"
    },
    "185": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "186": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "188": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8EA"
    },
    "191": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        554,
        1240
      ],
      "op": "JUMP",
      "path": "3"
    },
    "192": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "193": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4FA"
    },
    "196": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        554,
        1240
      ],
      "op": "JUMP",
      "path": "3"
    },
    "197": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "198": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1341
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x0"
    },
    "200": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1342,
        1347
      ],
      "op": "DUP3",
      "path": "3"
    },
    "201": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "203": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "204": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "207": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "208": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "209": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x996"
    },
    "212": {
      "fn": "UserRegistry.addExpertField",
      "jump": "i",
      "offset": [
        1336,
        1348
      ],
      "op": "JUMP",
      "path": "3"
    },
    "213": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "214": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "215": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "DUP2",
      "path": "3"
    },
    "216": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "217": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "219": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "220": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "221": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "DUP2",
      "path": "3"
    },
    "222": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "223": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "SUB",
      "path": "3"
    },
    "224": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "226": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "ADD",
      "path": "3"
    },
    "227": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "228": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1348
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "229": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1355
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "231": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1355
      ],
      "op": "ADD",
      "path": "3"
    },
    "232": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1355
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "233": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1355
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "235": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1355
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "238": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1355
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "239": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1355
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "240": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1355
      ],
      "op": "DIV",
      "path": "3"
    },
    "241": {
      "branch": 18,
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1336,
        1355
      ],
      "op": "AND",
      "path": "3"
    },
    "242": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x133"
    },
    "245": {
      "branch": 18,
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "246": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "248": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "255": {
      "op": "SHL"
    },
    "256": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "257": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "260": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "262": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "263": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "ADD",
      "path": "3"
    },
    "264": {
      "op": "MSTORE"
    },
    "265": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "269": {
      "op": "DUP3"
    },
    "270": {
      "op": "ADD"
    },
    "271": {
      "op": "MSTORE"
    },
    "272": {
      "op": "PUSH14",
      "value": "0x1D5CD95C97DB9BDD17D95E1A5CDD"
    },
    "287": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "289": {
      "op": "SHL"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "292": {
      "op": "DUP3"
    },
    "293": {
      "op": "ADD"
    },
    "294": {
      "op": "MSTORE"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "297": {
      "op": "ADD"
    },
    "298": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "299": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "301": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "302": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "303": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "304": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "SUB",
      "path": "3"
    },
    "305": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "306": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "307": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1328,
        1374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "308": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1384,
        1401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "310": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1409
      ],
      "op": "DUP1",
      "path": "3"
    },
    "311": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1410,
        1415
      ],
      "op": "DUP4",
      "path": "3"
    },
    "312": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "314": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "315": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x144"
    },
    "318": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "319": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "320": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x996"
    },
    "323": {
      "fn": "UserRegistry.addExpertField",
      "jump": "i",
      "offset": [
        1404,
        1416
      ],
      "op": "JUMP",
      "path": "3"
    },
    "324": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "325": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "326": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "DUP2",
      "path": "3"
    },
    "327": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "328": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "330": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "DUP1",
      "path": "3"
    },
    "331": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "332": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "334": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "335": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "DUP2",
      "path": "3"
    },
    "336": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "337": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "SUB",
      "path": "3"
    },
    "338": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "DUP4",
      "path": "3"
    },
    "339": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "ADD",
      "path": "3"
    },
    "340": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "341": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "342": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x0"
    },
    "344": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "DUP6",
      "path": "3"
    },
    "345": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "DUP2",
      "path": "3"
    },
    "346": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "347": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1455
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "349": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1455
      ],
      "op": "DUP3",
      "path": "3"
    },
    "350": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1455
      ],
      "op": "ADD",
      "path": "3"
    },
    "351": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "352": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "353": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "354": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "355": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "356": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "357": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "358": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1404,
        1416
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "359": {
      "op": "POP"
    },
    "360": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "362": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1436,
        1465
      ],
      "op": "AND",
      "path": "3"
    },
    "363": {
      "branch": 19,
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1435,
        1465
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "364": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AD"
    },
    "367": {
      "branch": 19,
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "368": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "370": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "371": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "375": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "377": {
      "op": "SHL"
    },
    "378": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "DUP2",
      "path": "3"
    },
    "379": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "382": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "384": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "DUP3",
      "path": "3"
    },
    "385": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "ADD",
      "path": "3"
    },
    "386": {
      "op": "MSTORE"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "391": {
      "op": "DUP3"
    },
    "392": {
      "op": "ADD"
    },
    "393": {
      "op": "MSTORE"
    },
    "394": {
      "op": "PUSH19",
      "value": "0x199A595B1917D85B1C9958591E57D859191959"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "416": {
      "op": "SHL"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "419": {
      "op": "DUP3"
    },
    "420": {
      "op": "ADD"
    },
    "421": {
      "op": "MSTORE"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "424": {
      "op": "ADD"
    },
    "425": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12A"
    },
    "428": {
      "op": "JUMP"
    },
    "429": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1427,
        1489
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "430": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1517
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x2"
    },
    "432": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "433": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1517
      ],
      "op": "ADD",
      "path": "3"
    },
    "434": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "DUP1",
      "path": "3"
    },
    "435": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "436": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "438": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "DUP2",
      "path": "3"
    },
    "439": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "DUP2",
      "path": "3"
    },
    "440": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "ADD",
      "path": "3"
    },
    "441": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "DUP4",
      "path": "3"
    },
    "442": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "445": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "446": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "DUP4",
      "path": "3"
    },
    "447": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "448": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "450": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "DUP1",
      "path": "3"
    },
    "451": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "DUP5",
      "path": "3"
    },
    "452": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "453": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "454": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "455": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "ADD",
      "path": "3"
    },
    "456": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "DUP6",
      "path": "3"
    },
    "457": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "458": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1500,
        1532
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "459": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 3
    },
    "460": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "DUP4",
      "path": "3"
    },
    "461": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "462": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "464": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1561
      ],
      "op": "DUP5",
      "path": "3"
    },
    "465": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1561
      ],
      "op": "ADD",
      "path": "3"
    },
    "466": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "467": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "468": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "469": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "471": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "472": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "DUP3",
      "path": "3"
    },
    "473": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "474": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1571
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "475": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1578
      ],
      "op": "DUP1",
      "path": "3"
    },
    "476": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1578
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "477": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "479": {
      "op": "NOT"
    },
    "480": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1578
      ],
      "op": "AND",
      "path": "3"
    },
    "481": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1578
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "482": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1578
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "483": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1578
      ],
      "op": "OR",
      "path": "3"
    },
    "484": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1578
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "485": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1542,
        1578
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "486": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "MLOAD",
      "path": "3",
      "statement": 4
    },
    "487": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xE8C8D70A47CFD9E36447BFEF4703ABC190A6EA8608550A2C7FD4F0308E1365A9"
    },
    "520": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "521": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x215"
    },
    "524": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "525": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1611,
        1616
      ],
      "op": "DUP6",
      "path": "3"
    },
    "526": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1611,
        1616
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "527": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1523,
        1531
      ],
      "op": "DUP6",
      "path": "3"
    },
    "528": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1523,
        1531
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "529": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B2"
    },
    "532": {
      "fn": "UserRegistry.addExpertField",
      "jump": "i",
      "offset": [
        1594,
        1627
      ],
      "op": "JUMP",
      "path": "3"
    },
    "533": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "534": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "536": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "537": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "DUP1",
      "path": "3"
    },
    "538": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "539": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "SUB",
      "path": "3"
    },
    "540": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "541": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1594,
        1627
      ],
      "op": "LOG1",
      "path": "3"
    },
    "542": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1318,
        1634
      ],
      "op": "POP",
      "path": "3"
    },
    "543": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "POP",
      "path": "3"
    },
    "544": {
      "fn": "UserRegistry.addExpertField",
      "offset": [
        1246,
        1634
      ],
      "op": "POP",
      "path": "3"
    },
    "545": {
      "fn": "UserRegistry.addExpertField",
      "jump": "o",
      "offset": [
        1246,
        1634
      ],
      "op": "JUMP",
      "path": "3"
    },
    "546": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "547": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2220,
        2233
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "549": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2265
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x1"
    },
    "551": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2266,
        2274
      ],
      "op": "DUP3",
      "path": "3"
    },
    "552": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "554": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "555": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x234"
    },
    "558": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "559": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "560": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x996"
    },
    "563": {
      "fn": "UserRegistry.getNickByAddress",
      "jump": "i",
      "offset": [
        2252,
        2275
      ],
      "op": "JUMP",
      "path": "3"
    },
    "564": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "565": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "566": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "567": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "568": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "570": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "ADD",
      "path": "3"
    },
    "571": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "573": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "574": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "575": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "576": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "SUB",
      "path": "3"
    },
    "577": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "578": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2252,
        2275
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "579": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "580": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "581": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D"
    },
    "584": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "585": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D4"
    },
    "588": {
      "fn": "UserRegistry.getNickByAddress",
      "jump": "i",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMP",
      "path": "3"
    },
    "589": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "590": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "591": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "593": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "ADD",
      "path": "3"
    },
    "594": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "596": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "597": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "598": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DIV",
      "path": "3"
    },
    "599": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "MUL",
      "path": "3"
    },
    "600": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "602": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "ADD",
      "path": "3"
    },
    "603": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "605": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "606": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "607": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "608": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "ADD",
      "path": "3"
    },
    "609": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "611": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "612": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "613": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "614": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "615": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "616": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "617": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "618": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "619": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "621": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "ADD",
      "path": "3"
    },
    "622": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP3",
      "path": "3"
    },
    "623": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "624": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "625": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x279"
    },
    "628": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "629": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D4"
    },
    "632": {
      "fn": "UserRegistry.getNickByAddress",
      "jump": "i",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMP",
      "path": "3"
    },
    "633": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "634": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "635": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "636": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C6"
    },
    "639": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "640": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "641": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "643": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "LT",
      "path": "3"
    },
    "644": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29B"
    },
    "647": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "648": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "651": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "652": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP4",
      "path": "3"
    },
    "653": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "654": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DIV",
      "path": "3"
    },
    "655": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "MUL",
      "path": "3"
    },
    "656": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP4",
      "path": "3"
    },
    "657": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "658": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "659": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "661": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "ADD",
      "path": "3"
    },
    "662": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "663": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C6"
    },
    "666": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMP",
      "path": "3"
    },
    "667": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "668": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP3",
      "path": "3"
    },
    "669": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "ADD",
      "path": "3"
    },
    "670": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "671": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "672": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "674": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "675": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "677": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "679": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "680": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "681": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "682": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "683": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "684": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "685": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "686": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "687": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "689": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "ADD",
      "path": "3"
    },
    "690": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "691": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "693": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "ADD",
      "path": "3"
    },
    "694": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "695": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP4",
      "path": "3"
    },
    "696": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "GT",
      "path": "3"
    },
    "697": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A9"
    },
    "700": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "701": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP3",
      "path": "3"
    },
    "702": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "703": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SUB",
      "path": "3"
    },
    "704": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "706": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "AND",
      "path": "3"
    },
    "707": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "DUP3",
      "path": "3"
    },
    "708": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "ADD",
      "path": "3"
    },
    "709": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "710": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "711": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "POP",
      "path": "3"
    },
    "712": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "POP",
      "path": "3"
    },
    "713": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "POP",
      "path": "3"
    },
    "714": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "POP",
      "path": "3"
    },
    "715": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "POP",
      "path": "3"
    },
    "716": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "717": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2245,
        2275
      ],
      "op": "POP",
      "path": "3"
    },
    "718": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "719": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "720": {
      "fn": "UserRegistry.getNickByAddress",
      "offset": [
        2147,
        2282
      ],
      "op": "POP",
      "path": "3"
    },
    "721": {
      "fn": "UserRegistry.getNickByAddress",
      "jump": "o",
      "offset": [
        2147,
        2282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "722": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "723": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1740,
        1764
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "725": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1778,
        1807
      ],
      "op": "DUP1",
      "path": "3"
    },
    "726": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1821,
        1850
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "728": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1864,
        1875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "730": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1913
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 6
    },
    "731": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1914,
        1919
      ],
      "op": "DUP6",
      "path": "3"
    },
    "732": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "734": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "735": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E8"
    },
    "738": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "739": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "740": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x996"
    },
    "743": {
      "fn": "UserRegistry.getUserInfo",
      "jump": "i",
      "offset": [
        1908,
        1920
      ],
      "op": "JUMP",
      "path": "3"
    },
    "744": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "745": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "746": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "747": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "748": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "750": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "751": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "752": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "753": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "754": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "SUB",
      "path": "3"
    },
    "755": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "757": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "ADD",
      "path": "3"
    },
    "758": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "759": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1920
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "760": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "762": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1927
      ],
      "op": "ADD",
      "path": "3"
    },
    "763": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1927
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "764": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "766": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "769": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "770": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1927
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "771": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1927
      ],
      "op": "DIV",
      "path": "3"
    },
    "772": {
      "branch": 20,
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1908,
        1927
      ],
      "op": "AND",
      "path": "3"
    },
    "773": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x341"
    },
    "776": {
      "branch": 20,
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "777": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "779": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "786": {
      "op": "SHL"
    },
    "787": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "DUP2",
      "path": "3"
    },
    "788": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "791": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "793": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "DUP3",
      "path": "3"
    },
    "794": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "ADD",
      "path": "3"
    },
    "795": {
      "op": "MSTORE"
    },
    "796": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "800": {
      "op": "DUP3"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "PUSH14",
      "value": "0x1D5CD95C97DB9BDD17D95E1A5CDD"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "820": {
      "op": "SHL"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "823": {
      "op": "DUP3"
    },
    "824": {
      "op": "ADD"
    },
    "825": {
      "op": "MSTORE"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "828": {
      "op": "ADD"
    },
    "829": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12A"
    },
    "832": {
      "op": "JUMP"
    },
    "833": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1900,
        1946
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "834": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1956,
        1973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "836": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1981
      ],
      "op": "DUP1",
      "path": "3"
    },
    "837": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1982,
        1987
      ],
      "op": "DUP7",
      "path": "3"
    },
    "838": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "840": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "841": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x352"
    },
    "844": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "845": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "846": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x996"
    },
    "849": {
      "fn": "UserRegistry.getUserInfo",
      "jump": "i",
      "offset": [
        1976,
        1988
      ],
      "op": "JUMP",
      "path": "3"
    },
    "850": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "851": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "852": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "DUP2",
      "path": "3"
    },
    "853": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "854": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "856": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "ADD",
      "path": "3"
    },
    "857": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "859": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "860": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "DUP1",
      "path": "3"
    },
    "861": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "862": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "SUB",
      "path": "3"
    },
    "863": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "864": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1976,
        1988
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "865": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1956,
        1988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "866": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1956,
        1988
      ],
      "op": "POP",
      "path": "3"
    },
    "867": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2019,
        2023
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 7
    },
    "868": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2019,
        2034
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "870": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2019,
        2034
      ],
      "op": "ADD",
      "path": "3"
    },
    "871": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2048,
        2052
      ],
      "op": "DUP2",
      "path": "3"
    },
    "872": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2048,
        2065
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "874": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2048,
        2065
      ],
      "op": "ADD",
      "path": "3"
    },
    "875": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2079,
        2083
      ],
      "op": "DUP3",
      "path": "3"
    },
    "876": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2079,
        2099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "878": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2079,
        2099
      ],
      "op": "ADD",
      "path": "3"
    },
    "879": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2117
      ],
      "op": "DUP4",
      "path": "3"
    },
    "880": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "882": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "ADD",
      "path": "3"
    },
    "883": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "885": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "886": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "887": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "888": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "891": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "EXP",
      "path": "3"
    },
    "892": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "893": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "DIV",
      "path": "3"
    },
    "894": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "896": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        2113,
        2124
      ],
      "op": "AND",
      "path": "3"
    },
    "897": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP4",
      "path": "3"
    },
    "898": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "899": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "900": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38C"
    },
    "903": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "904": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D4"
    },
    "907": {
      "fn": "UserRegistry.getUserInfo",
      "jump": "i",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "908": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "909": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "910": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "912": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "913": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "915": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "916": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "917": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DIV",
      "path": "3"
    },
    "918": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MUL",
      "path": "3"
    },
    "919": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "921": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "922": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "924": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "925": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "926": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "927": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "928": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "930": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "931": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "932": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "933": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "934": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "935": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "936": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "937": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "938": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "940": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "941": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "942": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "943": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "944": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B8"
    },
    "947": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "948": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D4"
    },
    "951": {
      "fn": "UserRegistry.getUserInfo",
      "jump": "i",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "952": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "953": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "954": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "955": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x405"
    },
    "958": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "959": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "960": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "962": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "LT",
      "path": "3"
    },
    "963": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3DA"
    },
    "966": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "967": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "970": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "971": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP4",
      "path": "3"
    },
    "972": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "973": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DIV",
      "path": "3"
    },
    "974": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MUL",
      "path": "3"
    },
    "975": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP4",
      "path": "3"
    },
    "976": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "977": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "978": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "980": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "981": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "982": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x405"
    },
    "985": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "986": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "987": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "988": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "989": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "990": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "991": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "993": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "994": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "996": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "998": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "999": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1000": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1001": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1002": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1003": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1004": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1005": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1006": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1008": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1009": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1010": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1012": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1013": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1014": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1015": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "GT",
      "path": "3"
    },
    "1016": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "1019": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1020": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1021": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1022": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SUB",
      "path": "3"
    },
    "1023": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1025": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "AND",
      "path": "3"
    },
    "1026": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1027": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1028": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1029": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1030": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1031": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1032": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1033": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1034": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1035": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1036": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1037": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1038": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1039": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1040": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1041": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1043": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MUL",
      "path": "3"
    },
    "1044": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1046": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1047": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1049": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1050": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1051": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1052": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1053": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1055": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1056": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1057": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1058": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1059": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1060": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1061": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1062": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1063": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1065": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1066": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1067": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1068": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1069": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1070": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1071": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x457"
    },
    "1074": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1075": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1077": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MUL",
      "path": "3"
    },
    "1078": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1079": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1080": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1081": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1082": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1084": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1085": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1087": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1089": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1090": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1091": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1092": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1093": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1094": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1095": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1096": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1098": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1099": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1100": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1102": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1103": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1104": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1105": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1106": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "GT",
      "path": "3"
    },
    "1107": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x443"
    },
    "1110": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1111": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1112": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1113": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1114": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1115": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1116": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1117": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1118": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1119": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1120": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1121": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1122": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46A"
    },
    "1125": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1126": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D4"
    },
    "1129": {
      "fn": "UserRegistry.getUserInfo",
      "jump": "i",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1130": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1131": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1132": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1134": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1135": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1137": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1138": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1139": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DIV",
      "path": "3"
    },
    "1140": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MUL",
      "path": "3"
    },
    "1141": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1143": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1144": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1146": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1147": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1148": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1149": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1150": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1152": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1153": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1154": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1155": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1156": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1157": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1158": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1159": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1160": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1162": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1163": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1164": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1165": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1166": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x496"
    },
    "1169": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1170": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D4"
    },
    "1173": {
      "fn": "UserRegistry.getUserInfo",
      "jump": "i",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1174": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1175": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1176": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1177": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E3"
    },
    "1180": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1181": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1182": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1184": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "LT",
      "path": "3"
    },
    "1185": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B8"
    },
    "1188": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1189": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1192": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1193": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1194": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1195": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DIV",
      "path": "3"
    },
    "1196": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MUL",
      "path": "3"
    },
    "1197": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1198": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1199": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1200": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1202": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1203": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1204": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E3"
    },
    "1207": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1208": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1209": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1210": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1211": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1212": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1213": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1215": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1216": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1218": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1220": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1221": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1222": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1223": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1224": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1225": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1226": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1227": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1228": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1230": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1231": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1232": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1234": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1235": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1236": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1237": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "GT",
      "path": "3"
    },
    "1238": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C6"
    },
    "1241": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1242": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1243": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1244": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SUB",
      "path": "3"
    },
    "1245": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1247": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "AND",
      "path": "3"
    },
    "1248": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1249": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "ADD",
      "path": "3"
    },
    "1250": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1251": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1252": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1253": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1254": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1255": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1256": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1257": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1258": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1259": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1260": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1261": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1262": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1263": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1264": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1265": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1266": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1267": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1998,
        2134
      ],
      "op": "POP",
      "path": "3"
    },
    "1268": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1269": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1270": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "POP",
      "path": "3"
    },
    "1271": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1272": {
      "fn": "UserRegistry.getUserInfo",
      "offset": [
        1640,
        2141
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1273": {
      "fn": "UserRegistry.getUserInfo",
      "jump": "o",
      "offset": [
        1640,
        2141
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1274": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1275": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        721,
        734
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1277": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        760
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x0"
    },
    "1279": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        761,
        766
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1280": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1282": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1283": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50C"
    },
    "1286": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1287": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1288": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x996"
    },
    "1291": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        755,
        767
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1292": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1293": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1294": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1295": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1296": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1298": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1299": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1300": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1301": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1302": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "SUB",
      "path": "3"
    },
    "1303": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1305": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "ADD",
      "path": "3"
    },
    "1306": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1307": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        767
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1308": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        774
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1310": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        774
      ],
      "op": "ADD",
      "path": "3"
    },
    "1311": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        774
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1312": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        774
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1314": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        774
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1317": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        774
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1318": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        774
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1319": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        774
      ],
      "op": "DIV",
      "path": "3"
    },
    "1320": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        755,
        774
      ],
      "op": "AND",
      "path": "3"
    },
    "1321": {
      "branch": 21,
      "fn": "UserRegistry.registerUser",
      "offset": [
        754,
        774
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1322": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x56A"
    },
    "1325": {
      "branch": 21,
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1326": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1328": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1329": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1337": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1340": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1342": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1343": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "ADD",
      "path": "3"
    },
    "1344": {
      "op": "MSTORE"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1349": {
      "op": "DUP3"
    },
    "1350": {
      "op": "ADD"
    },
    "1351": {
      "op": "MSTORE"
    },
    "1352": {
      "op": "PUSH18",
      "value": "0x3734B1B5AFB0B63932B0B23CAFBA30B5B2B7"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "1373": {
      "op": "SHL"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1376": {
      "op": "DUP3"
    },
    "1377": {
      "op": "ADD"
    },
    "1378": {
      "op": "MSTORE"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1381": {
      "op": "ADD"
    },
    "1382": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12A"
    },
    "1385": {
      "op": "JUMP"
    },
    "1386": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        746,
        797
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1387": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        834
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x1"
    },
    "1389": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        835,
        845
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1390": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1392": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1393": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57A"
    },
    "1396": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1397": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1398": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x996"
    },
    "1401": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        821,
        846
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1402": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1403": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1404": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1405": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1406": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1408": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "ADD",
      "path": "3"
    },
    "1409": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1411": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1412": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1413": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1414": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "SUB",
      "path": "3"
    },
    "1415": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1416": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        821,
        846
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1417": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        815,
        854
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1418": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        815,
        854
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1419": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        815,
        854
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x593"
    },
    "1422": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        815,
        854
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1423": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        815,
        854
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D4"
    },
    "1426": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        815,
        854
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1427": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        815,
        854
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1428": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        815,
        859
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1429": {
      "branch": 22,
      "fn": "UserRegistry.registerUser",
      "offset": [
        815,
        859
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1430": {
      "op": "POP"
    },
    "1431": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E2"
    },
    "1434": {
      "branch": 22,
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1435": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1437": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1438": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1444": {
      "op": "SHL"
    },
    "1445": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1446": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1449": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1451": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1452": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "ADD",
      "path": "3"
    },
    "1453": {
      "op": "MSTORE"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH32",
      "value": "0x616464726573735F616C72656164795F72656769737465726564000000000000"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1496": {
      "op": "DUP3"
    },
    "1497": {
      "op": "ADD"
    },
    "1498": {
      "op": "MSTORE"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1501": {
      "op": "ADD"
    },
    "1502": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12A"
    },
    "1505": {
      "op": "JUMP"
    },
    "1506": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        807,
        890
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1507": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        901,
        918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1509": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        926
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1510": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        927,
        932
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1511": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1513": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1514": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F3"
    },
    "1517": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1518": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1519": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x996"
    },
    "1522": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        921,
        933
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1523": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1524": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1525": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1526": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1527": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1529": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1530": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1531": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1532": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1533": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "SUB",
      "path": "3"
    },
    "1534": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1536": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "ADD",
      "path": "3"
    },
    "1537": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1538": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1539": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1540": {
      "op": "POP"
    },
    "1541": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1542": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        943,
        960
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 10,
      "value": "0x60F"
    },
    "1545": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        955,
        960
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1546": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        921,
        933
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1547": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        943,
        960
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA5D"
    },
    "1550": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        943,
        960
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1551": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        943,
        960
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1552": {
      "op": "POP"
    },
    "1553": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        970,
        985
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x1"
    },
    "1555": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        970,
        985
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1556": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        970,
        985
      ],
      "op": "ADD",
      "path": "3"
    },
    "1557": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        970,
        998
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x61E"
    },
    "1560": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        988,
        998
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1561": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        970,
        985
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1562": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        970,
        998
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA5D"
    },
    "1565": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        970,
        998
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1566": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        970,
        998
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1008,
        1028
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x4"
    },
    "1570": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1008,
        1028
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1571": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1008,
        1028
      ],
      "op": "ADD",
      "path": "3"
    },
    "1572": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1008,
        1046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62D"
    },
    "1575": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1031,
        1046
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1576": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1008,
        1028
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1577": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1008,
        1046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA5D"
    },
    "1580": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        1008,
        1046
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1581": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1008,
        1046
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1067
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 13,
      "value": "0x5"
    },
    "1585": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1067
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1586": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1067
      ],
      "op": "ADD",
      "path": "3"
    },
    "1587": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1076
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1588": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1076
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1589": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1592": {
      "op": "NOT"
    },
    "1593": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1076
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1594": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1076
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1595": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1076
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1596": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1086,
        1104
      ],
      "op": "AND",
      "path": "3",
      "statement": 14
    },
    "1597": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1600": {
      "op": "NOT"
    },
    "1601": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1086,
        1104
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1602": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1086,
        1104
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1603": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1086,
        1104
      ],
      "op": "AND",
      "path": "3"
    },
    "1604": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1086,
        1104
      ],
      "op": "OR",
      "path": "3"
    },
    "1605": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1076
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1608": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1086,
        1104
      ],
      "op": "OR",
      "path": "3"
    },
    "1609": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1086,
        1104
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1610": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1086,
        1104
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1611": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 15,
      "value": "0x40"
    },
    "1613": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1614": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1143,
        1148
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1615": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1143,
        1148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1616": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1076
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1618": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1056,
        1076
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1619": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65D"
    },
    "1622": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1623": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1129,
        1139
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1624": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1129,
        1139
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1625": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x996"
    },
    "1628": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        1115,
        1140
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1629": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1630": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1631": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1632": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1633": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1635": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "ADD",
      "path": "3"
    },
    "1636": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1638": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1639": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1640": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1641": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "SUB",
      "path": "3"
    },
    "1642": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1643": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1140
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1644": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1645": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1148
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1646": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1148
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x677"
    },
    "1649": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1148
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1650": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1651": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1148
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA5D"
    },
    "1654": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        1115,
        1148
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1655": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1148
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1656": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1115,
        1148
      ],
      "op": "POP",
      "path": "3"
    },
    "1657": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "PUSH32",
      "path": "3",
      "statement": 16,
      "value": "0x996D7324173609959370942B1EE1B743DC623B3D50459E66C1D55DF55E5A9F37"
    },
    "1690": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1179,
        1184
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1691": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1186,
        1196
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1692": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1694": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1695": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A9"
    },
    "1698": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1699": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1700": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1701": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB1C"
    },
    "1704": {
      "fn": "UserRegistry.registerUser",
      "jump": "i",
      "offset": [
        1164,
        1197
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1705": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1706": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1708": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1709": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1710": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1711": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "SUB",
      "path": "3"
    },
    "1712": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1713": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1164,
        1197
      ],
      "op": "LOG1",
      "path": "3"
    },
    "1714": {
      "op": "POP"
    },
    "1715": {
      "op": "POP"
    },
    "1716": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x40"
    },
    "1718": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1719": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1720": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1721": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1722": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "ADD",
      "path": "3"
    },
    "1723": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1724": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1725": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1726": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "1728": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1729": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1730": {
      "op": "PUSH16",
      "value": "0x72656769737465725F73756363657373"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1749": {
      "op": "SHL"
    },
    "1750": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1752": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1753": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "ADD",
      "path": "3"
    },
    "1754": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        1208,
        1233
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1755": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1756": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1757": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "POP",
      "path": "3"
    },
    "1758": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "POP",
      "path": "3"
    },
    "1759": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "POP",
      "path": "3"
    },
    "1760": {
      "fn": "UserRegistry.registerUser",
      "offset": [
        554,
        1240
      ],
      "op": "POP",
      "path": "3"
    },
    "1761": {
      "fn": "UserRegistry.registerUser",
      "jump": "o",
      "offset": [
        554,
        1240
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1762": {
      "op": "JUMPDEST"
    },
    "1763": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1770": {
      "op": "SHL"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1773": {
      "op": "MSTORE"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1778": {
      "op": "MSTORE"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1783": {
      "op": "REVERT"
    },
    "1784": {
      "op": "JUMPDEST"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1787": {
      "op": "DUP3"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1790": {
      "op": "DUP4"
    },
    "1791": {
      "op": "ADD"
    },
    "1792": {
      "op": "SLT"
    },
    "1793": {
      "op": "PUSH2",
      "value": "0x709"
    },
    "1796": {
      "op": "JUMPI"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1799": {
      "op": "DUP1"
    },
    "1800": {
      "op": "REVERT"
    },
    "1801": {
      "op": "JUMPDEST"
    },
    "1802": {
      "op": "DUP2"
    },
    "1803": {
      "op": "CALLDATALOAD"
    },
    "1804": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1813": {
      "op": "DUP2"
    },
    "1814": {
      "op": "GT"
    },
    "1815": {
      "op": "ISZERO"
    },
    "1816": {
      "op": "PUSH2",
      "value": "0x723"
    },
    "1819": {
      "op": "JUMPI"
    },
    "1820": {
      "op": "PUSH2",
      "value": "0x723"
    },
    "1823": {
      "op": "PUSH2",
      "value": "0x6E2"
    },
    "1826": {
      "jump": "i",
      "op": "JUMP"
    },
    "1827": {
      "op": "JUMPDEST"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1830": {
      "op": "MLOAD"
    },
    "1831": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1833": {
      "op": "DUP3"
    },
    "1834": {
      "op": "ADD"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1837": {
      "op": "NOT"
    },
    "1838": {
      "op": "SWAP1"
    },
    "1839": {
      "op": "DUP2"
    },
    "1840": {
      "op": "AND"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1843": {
      "op": "ADD"
    },
    "1844": {
      "op": "AND"
    },
    "1845": {
      "op": "DUP2"
    },
    "1846": {
      "op": "ADD"
    },
    "1847": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1856": {
      "op": "DUP2"
    },
    "1857": {
      "op": "GT"
    },
    "1858": {
      "op": "DUP3"
    },
    "1859": {
      "op": "DUP3"
    },
    "1860": {
      "op": "LT"
    },
    "1861": {
      "op": "OR"
    },
    "1862": {
      "op": "ISZERO"
    },
    "1863": {
      "op": "PUSH2",
      "value": "0x752"
    },
    "1866": {
      "op": "JUMPI"
    },
    "1867": {
      "op": "PUSH2",
      "value": "0x752"
    },
    "1870": {
      "op": "PUSH2",
      "value": "0x6E2"
    },
    "1873": {
      "jump": "i",
      "op": "JUMP"
    },
    "1874": {
      "op": "JUMPDEST"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "op": "DUP2"
    },
    "1879": {
      "op": "DUP2"
    },
    "1880": {
      "op": "MSTORE"
    },
    "1881": {
      "op": "DUP4"
    },
    "1882": {
      "op": "DUP3"
    },
    "1883": {
      "op": "ADD"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1886": {
      "op": "ADD"
    },
    "1887": {
      "op": "DUP6"
    },
    "1888": {
      "op": "LT"
    },
    "1889": {
      "op": "ISZERO"
    },
    "1890": {
      "op": "PUSH2",
      "value": "0x76A"
    },
    "1893": {
      "op": "JUMPI"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1896": {
      "op": "DUP1"
    },
    "1897": {
      "op": "REVERT"
    },
    "1898": {
      "op": "JUMPDEST"
    },
    "1899": {
      "op": "DUP2"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1902": {
      "op": "DUP6"
    },
    "1903": {
      "op": "ADD"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1906": {
      "op": "DUP4"
    },
    "1907": {
      "op": "ADD"
    },
    "1908": {
      "op": "CALLDATACOPY"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1911": {
      "op": "SWAP2"
    },
    "1912": {
      "op": "DUP2"
    },
    "1913": {
      "op": "ADD"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1916": {
      "op": "ADD"
    },
    "1917": {
      "op": "SWAP2"
    },
    "1918": {
      "op": "SWAP1"
    },
    "1919": {
      "op": "SWAP2"
    },
    "1920": {
      "op": "MSTORE"
    },
    "1921": {
      "op": "SWAP4"
    },
    "1922": {
      "op": "SWAP3"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "op": "POP"
    },
    "1925": {
      "op": "POP"
    },
    "1926": {
      "jump": "o",
      "op": "JUMP"
    },
    "1927": {
      "op": "JUMPDEST"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1930": {
      "op": "DUP1"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1933": {
      "op": "DUP4"
    },
    "1934": {
      "op": "DUP6"
    },
    "1935": {
      "op": "SUB"
    },
    "1936": {
      "op": "SLT"
    },
    "1937": {
      "op": "ISZERO"
    },
    "1938": {
      "op": "PUSH2",
      "value": "0x79A"
    },
    "1941": {
      "op": "JUMPI"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1944": {
      "op": "DUP1"
    },
    "1945": {
      "op": "REVERT"
    },
    "1946": {
      "op": "JUMPDEST"
    },
    "1947": {
      "op": "DUP3"
    },
    "1948": {
      "op": "CALLDATALOAD"
    },
    "1949": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1958": {
      "op": "DUP2"
    },
    "1959": {
      "op": "GT"
    },
    "1960": {
      "op": "ISZERO"
    },
    "1961": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "1964": {
      "op": "JUMPI"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1967": {
      "op": "DUP1"
    },
    "1968": {
      "op": "REVERT"
    },
    "1969": {
      "op": "JUMPDEST"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x7BD"
    },
    "1973": {
      "op": "DUP6"
    },
    "1974": {
      "op": "DUP3"
    },
    "1975": {
      "op": "DUP7"
    },
    "1976": {
      "op": "ADD"
    },
    "1977": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "1980": {
      "jump": "i",
      "op": "JUMP"
    },
    "1981": {
      "op": "JUMPDEST"
    },
    "1982": {
      "op": "SWAP6"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1985": {
      "op": "SWAP5"
    },
    "1986": {
      "op": "SWAP1"
    },
    "1987": {
      "op": "SWAP5"
    },
    "1988": {
      "op": "ADD"
    },
    "1989": {
      "op": "CALLDATALOAD"
    },
    "1990": {
      "op": "SWAP5"
    },
    "1991": {
      "op": "POP"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "op": "POP"
    },
    "1994": {
      "op": "POP"
    },
    "1995": {
      "jump": "o",
      "op": "JUMP"
    },
    "1996": {
      "op": "JUMPDEST"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2001": {
      "op": "DUP3"
    },
    "2002": {
      "op": "DUP5"
    },
    "2003": {
      "op": "SUB"
    },
    "2004": {
      "op": "SLT"
    },
    "2005": {
      "op": "ISZERO"
    },
    "2006": {
      "op": "PUSH2",
      "value": "0x7DE"
    },
    "2009": {
      "op": "JUMPI"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2012": {
      "op": "DUP1"
    },
    "2013": {
      "op": "REVERT"
    },
    "2014": {
      "op": "JUMPDEST"
    },
    "2015": {
      "op": "DUP2"
    },
    "2016": {
      "op": "CALLDATALOAD"
    },
    "2017": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2026": {
      "op": "DUP2"
    },
    "2027": {
      "op": "GT"
    },
    "2028": {
      "op": "ISZERO"
    },
    "2029": {
      "op": "PUSH2",
      "value": "0x7F5"
    },
    "2032": {
      "op": "JUMPI"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2035": {
      "op": "DUP1"
    },
    "2036": {
      "op": "REVERT"
    },
    "2037": {
      "op": "JUMPDEST"
    },
    "2038": {
      "op": "PUSH2",
      "value": "0x801"
    },
    "2041": {
      "op": "DUP5"
    },
    "2042": {
      "op": "DUP3"
    },
    "2043": {
      "op": "DUP6"
    },
    "2044": {
      "op": "ADD"
    },
    "2045": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "2048": {
      "jump": "i",
      "op": "JUMP"
    },
    "2049": {
      "op": "JUMPDEST"
    },
    "2050": {
      "op": "SWAP5"
    },
    "2051": {
      "op": "SWAP4"
    },
    "2052": {
      "op": "POP"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "op": "POP"
    },
    "2055": {
      "op": "POP"
    },
    "2056": {
      "jump": "o",
      "op": "JUMP"
    },
    "2057": {
      "op": "JUMPDEST"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2060": {
      "op": "JUMPDEST"
    },
    "2061": {
      "op": "DUP4"
    },
    "2062": {
      "op": "DUP2"
    },
    "2063": {
      "op": "LT"
    },
    "2064": {
      "op": "ISZERO"
    },
    "2065": {
      "op": "PUSH2",
      "value": "0x824"
    },
    "2068": {
      "op": "JUMPI"
    },
    "2069": {
      "op": "DUP2"
    },
    "2070": {
      "op": "DUP2"
    },
    "2071": {
      "op": "ADD"
    },
    "2072": {
      "op": "MLOAD"
    },
    "2073": {
      "op": "DUP4"
    },
    "2074": {
      "op": "DUP3"
    },
    "2075": {
      "op": "ADD"
    },
    "2076": {
      "op": "MSTORE"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2079": {
      "op": "ADD"
    },
    "2080": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2083": {
      "op": "JUMP"
    },
    "2084": {
      "op": "JUMPDEST"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "op": "POP"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2089": {
      "op": "SWAP2"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "op": "MSTORE"
    },
    "2092": {
      "jump": "o",
      "op": "JUMP"
    },
    "2093": {
      "op": "JUMPDEST"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2096": {
      "op": "DUP2"
    },
    "2097": {
      "op": "MLOAD"
    },
    "2098": {
      "op": "DUP1"
    },
    "2099": {
      "op": "DUP5"
    },
    "2100": {
      "op": "MSTORE"
    },
    "2101": {
      "op": "PUSH2",
      "value": "0x845"
    },
    "2104": {
      "op": "DUP2"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2107": {
      "op": "DUP7"
    },
    "2108": {
      "op": "ADD"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2111": {
      "op": "DUP7"
    },
    "2112": {
      "op": "ADD"
    },
    "2113": {
      "op": "PUSH2",
      "value": "0x809"
    },
    "2116": {
      "jump": "i",
      "op": "JUMP"
    },
    "2117": {
      "op": "JUMPDEST"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2120": {
      "op": "ADD"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2123": {
      "op": "NOT"
    },
    "2124": {
      "op": "AND"
    },
    "2125": {
      "op": "SWAP3"
    },
    "2126": {
      "op": "SWAP1"
    },
    "2127": {
      "op": "SWAP3"
    },
    "2128": {
      "op": "ADD"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2131": {
      "op": "ADD"
    },
    "2132": {
      "op": "SWAP3"
    },
    "2133": {
      "op": "SWAP2"
    },
    "2134": {
      "op": "POP"
    },
    "2135": {
      "op": "POP"
    },
    "2136": {
      "jump": "o",
      "op": "JUMP"
    },
    "2137": {
      "op": "JUMPDEST"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2140": {
      "op": "DUP2"
    },
    "2141": {
      "op": "MSTORE"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2144": {
      "op": "PUSH2",
      "value": "0x86C"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2149": {
      "op": "DUP4"
    },
    "2150": {
      "op": "ADD"
    },
    "2151": {
      "op": "DUP5"
    },
    "2152": {
      "op": "PUSH2",
      "value": "0x82D"
    },
    "2155": {
      "jump": "i",
      "op": "JUMP"
    },
    "2156": {
      "op": "JUMPDEST"
    },
    "2157": {
      "op": "SWAP4"
    },
    "2158": {
      "op": "SWAP3"
    },
    "2159": {
      "op": "POP"
    },
    "2160": {
      "op": "POP"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "jump": "o",
      "op": "JUMP"
    },
    "2163": {
      "op": "JUMPDEST"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2166": {
      "op": "DUP2"
    },
    "2167": {
      "op": "MSTORE"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2170": {
      "op": "PUSH2",
      "value": "0x886"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2175": {
      "op": "DUP4"
    },
    "2176": {
      "op": "ADD"
    },
    "2177": {
      "op": "DUP8"
    },
    "2178": {
      "op": "PUSH2",
      "value": "0x82D"
    },
    "2181": {
      "jump": "i",
      "op": "JUMP"
    },
    "2182": {
      "op": "JUMPDEST"
    },
    "2183": {
      "op": "DUP3"
    },
    "2184": {
      "op": "DUP2"
    },
    "2185": {
      "op": "SUB"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2188": {
      "op": "DUP5"
    },
    "2189": {
      "op": "ADD"
    },
    "2190": {
      "op": "MSTORE"
    },
    "2191": {
      "op": "DUP1"
    },
    "2192": {
      "op": "DUP7"
    },
    "2193": {
      "op": "MLOAD"
    },
    "2194": {
      "op": "DUP1"
    },
    "2195": {
      "op": "DUP4"
    },
    "2196": {
      "op": "MSTORE"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2199": {
      "op": "DUP4"
    },
    "2200": {
      "op": "ADD"
    },
    "2201": {
      "op": "SWAP2"
    },
    "2202": {
      "op": "POP"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2205": {
      "op": "DUP9"
    },
    "2206": {
      "op": "ADD"
    },
    "2207": {
      "op": "SWAP3"
    },
    "2208": {
      "op": "POP"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2211": {
      "op": "JUMPDEST"
    },
    "2212": {
      "op": "DUP2"
    },
    "2213": {
      "op": "DUP2"
    },
    "2214": {
      "op": "LT"
    },
    "2215": {
      "op": "ISZERO"
    },
    "2216": {
      "op": "PUSH2",
      "value": "0x8C1"
    },
    "2219": {
      "op": "JUMPI"
    },
    "2220": {
      "op": "DUP4"
    },
    "2221": {
      "op": "MLOAD"
    },
    "2222": {
      "op": "DUP4"
    },
    "2223": {
      "op": "MSTORE"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2226": {
      "op": "SWAP4"
    },
    "2227": {
      "op": "DUP5"
    },
    "2228": {
      "op": "ADD"
    },
    "2229": {
      "op": "SWAP4"
    },
    "2230": {
      "op": "SWAP1"
    },
    "2231": {
      "op": "SWAP3"
    },
    "2232": {
      "op": "ADD"
    },
    "2233": {
      "op": "SWAP2"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2236": {
      "op": "ADD"
    },
    "2237": {
      "op": "PUSH2",
      "value": "0x8A3"
    },
    "2240": {
      "op": "JUMP"
    },
    "2241": {
      "op": "JUMPDEST"
    },
    "2242": {
      "op": "POP"
    },
    "2243": {
      "op": "POP"
    },
    "2244": {
      "op": "DUP4"
    },
    "2245": {
      "op": "DUP2"
    },
    "2246": {
      "op": "SUB"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2249": {
      "op": "DUP6"
    },
    "2250": {
      "op": "ADD"
    },
    "2251": {
      "op": "MSTORE"
    },
    "2252": {
      "op": "PUSH2",
      "value": "0x8D5"
    },
    "2255": {
      "op": "DUP2"
    },
    "2256": {
      "op": "DUP8"
    },
    "2257": {
      "op": "PUSH2",
      "value": "0x82D"
    },
    "2260": {
      "jump": "i",
      "op": "JUMP"
    },
    "2261": {
      "op": "JUMPDEST"
    },
    "2262": {
      "op": "SWAP3"
    },
    "2263": {
      "op": "POP"
    },
    "2264": {
      "op": "POP"
    },
    "2265": {
      "op": "POP"
    },
    "2266": {
      "op": "DUP3"
    },
    "2267": {
      "op": "ISZERO"
    },
    "2268": {
      "op": "ISZERO"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2271": {
      "op": "DUP4"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "op": "MSTORE"
    },
    "2274": {
      "op": "SWAP6"
    },
    "2275": {
      "op": "SWAP5"
    },
    "2276": {
      "op": "POP"
    },
    "2277": {
      "op": "POP"
    },
    "2278": {
      "op": "POP"
    },
    "2279": {
      "op": "POP"
    },
    "2280": {
      "op": "POP"
    },
    "2281": {
      "jump": "o",
      "op": "JUMP"
    },
    "2282": {
      "op": "JUMPDEST"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2285": {
      "op": "DUP1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2288": {
      "op": "DUP1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2291": {
      "op": "DUP6"
    },
    "2292": {
      "op": "DUP8"
    },
    "2293": {
      "op": "SUB"
    },
    "2294": {
      "op": "SLT"
    },
    "2295": {
      "op": "ISZERO"
    },
    "2296": {
      "op": "PUSH2",
      "value": "0x900"
    },
    "2299": {
      "op": "JUMPI"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2302": {
      "op": "DUP1"
    },
    "2303": {
      "op": "REVERT"
    },
    "2304": {
      "op": "JUMPDEST"
    },
    "2305": {
      "op": "DUP5"
    },
    "2306": {
      "op": "CALLDATALOAD"
    },
    "2307": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2316": {
      "op": "DUP2"
    },
    "2317": {
      "op": "GT"
    },
    "2318": {
      "op": "ISZERO"
    },
    "2319": {
      "op": "PUSH2",
      "value": "0x917"
    },
    "2322": {
      "op": "JUMPI"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2325": {
      "op": "DUP1"
    },
    "2326": {
      "op": "REVERT"
    },
    "2327": {
      "op": "JUMPDEST"
    },
    "2328": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2331": {
      "op": "DUP8"
    },
    "2332": {
      "op": "DUP3"
    },
    "2333": {
      "op": "DUP9"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "2338": {
      "jump": "i",
      "op": "JUMP"
    },
    "2339": {
      "op": "JUMPDEST"
    },
    "2340": {
      "op": "SWAP5"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "op": "POP"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2345": {
      "op": "DUP6"
    },
    "2346": {
      "op": "ADD"
    },
    "2347": {
      "op": "CALLDATALOAD"
    },
    "2348": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2357": {
      "op": "DUP2"
    },
    "2358": {
      "op": "GT"
    },
    "2359": {
      "op": "ISZERO"
    },
    "2360": {
      "op": "PUSH2",
      "value": "0x940"
    },
    "2363": {
      "op": "JUMPI"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2366": {
      "op": "DUP1"
    },
    "2367": {
      "op": "REVERT"
    },
    "2368": {
      "op": "JUMPDEST"
    },
    "2369": {
      "op": "PUSH2",
      "value": "0x94C"
    },
    "2372": {
      "op": "DUP8"
    },
    "2373": {
      "op": "DUP3"
    },
    "2374": {
      "op": "DUP9"
    },
    "2375": {
      "op": "ADD"
    },
    "2376": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "2379": {
      "jump": "i",
      "op": "JUMP"
    },
    "2380": {
      "op": "JUMPDEST"
    },
    "2381": {
      "op": "SWAP4"
    },
    "2382": {
      "op": "POP"
    },
    "2383": {
      "op": "POP"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2386": {
      "op": "DUP6"
    },
    "2387": {
      "op": "ADD"
    },
    "2388": {
      "op": "CALLDATALOAD"
    },
    "2389": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2398": {
      "op": "DUP2"
    },
    "2399": {
      "op": "GT"
    },
    "2400": {
      "op": "ISZERO"
    },
    "2401": {
      "op": "PUSH2",
      "value": "0x969"
    },
    "2404": {
      "op": "JUMPI"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2407": {
      "op": "DUP1"
    },
    "2408": {
      "op": "REVERT"
    },
    "2409": {
      "op": "JUMPDEST"
    },
    "2410": {
      "op": "PUSH2",
      "value": "0x975"
    },
    "2413": {
      "op": "DUP8"
    },
    "2414": {
      "op": "DUP3"
    },
    "2415": {
      "op": "DUP9"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "2420": {
      "jump": "i",
      "op": "JUMP"
    },
    "2421": {
      "op": "JUMPDEST"
    },
    "2422": {
      "op": "SWAP3"
    },
    "2423": {
      "op": "POP"
    },
    "2424": {
      "op": "POP"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2427": {
      "op": "DUP6"
    },
    "2428": {
      "op": "ADD"
    },
    "2429": {
      "op": "CALLDATALOAD"
    },
    "2430": {
      "op": "DUP1"
    },
    "2431": {
      "op": "ISZERO"
    },
    "2432": {
      "op": "ISZERO"
    },
    "2433": {
      "op": "DUP2"
    },
    "2434": {
      "op": "EQ"
    },
    "2435": {
      "op": "PUSH2",
      "value": "0x98B"
    },
    "2438": {
      "op": "JUMPI"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2441": {
      "op": "DUP1"
    },
    "2442": {
      "op": "REVERT"
    },
    "2443": {
      "op": "JUMPDEST"
    },
    "2444": {
      "op": "SWAP4"
    },
    "2445": {
      "op": "SWAP7"
    },
    "2446": {
      "op": "SWAP3"
    },
    "2447": {
      "op": "SWAP6"
    },
    "2448": {
      "op": "POP"
    },
    "2449": {
      "op": "SWAP1"
    },
    "2450": {
      "op": "SWAP4"
    },
    "2451": {
      "op": "POP"
    },
    "2452": {
      "op": "POP"
    },
    "2453": {
      "jump": "o",
      "op": "JUMP"
    },
    "2454": {
      "op": "JUMPDEST"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2457": {
      "op": "DUP3"
    },
    "2458": {
      "op": "MLOAD"
    },
    "2459": {
      "op": "PUSH2",
      "value": "0x9A8"
    },
    "2462": {
      "op": "DUP2"
    },
    "2463": {
      "op": "DUP5"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2466": {
      "op": "DUP8"
    },
    "2467": {
      "op": "ADD"
    },
    "2468": {
      "op": "PUSH2",
      "value": "0x809"
    },
    "2471": {
      "jump": "i",
      "op": "JUMP"
    },
    "2472": {
      "op": "JUMPDEST"
    },
    "2473": {
      "op": "SWAP2"
    },
    "2474": {
      "op": "SWAP1"
    },
    "2475": {
      "op": "SWAP2"
    },
    "2476": {
      "op": "ADD"
    },
    "2477": {
      "op": "SWAP3"
    },
    "2478": {
      "op": "SWAP2"
    },
    "2479": {
      "op": "POP"
    },
    "2480": {
      "op": "POP"
    },
    "2481": {
      "jump": "o",
      "op": "JUMP"
    },
    "2482": {
      "op": "JUMPDEST"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2485": {
      "op": "DUP2"
    },
    "2486": {
      "op": "MSTORE"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2489": {
      "op": "PUSH2",
      "value": "0x9C5"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2494": {
      "op": "DUP4"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "op": "DUP6"
    },
    "2497": {
      "op": "PUSH2",
      "value": "0x82D"
    },
    "2500": {
      "jump": "i",
      "op": "JUMP"
    },
    "2501": {
      "op": "JUMPDEST"
    },
    "2502": {
      "op": "SWAP1"
    },
    "2503": {
      "op": "POP"
    },
    "2504": {
      "op": "DUP3"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2507": {
      "op": "DUP4"
    },
    "2508": {
      "op": "ADD"
    },
    "2509": {
      "op": "MSTORE"
    },
    "2510": {
      "op": "SWAP4"
    },
    "2511": {
      "op": "SWAP3"
    },
    "2512": {
      "op": "POP"
    },
    "2513": {
      "op": "POP"
    },
    "2514": {
      "op": "POP"
    },
    "2515": {
      "jump": "o",
      "op": "JUMP"
    },
    "2516": {
      "op": "JUMPDEST"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2519": {
      "op": "DUP2"
    },
    "2520": {
      "op": "DUP2"
    },
    "2521": {
      "op": "SHR"
    },
    "2522": {
      "op": "SWAP1"
    },
    "2523": {
      "op": "DUP3"
    },
    "2524": {
      "op": "AND"
    },
    "2525": {
      "op": "DUP1"
    },
    "2526": {
      "op": "PUSH2",
      "value": "0x9E8"
    },
    "2529": {
      "op": "JUMPI"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2532": {
      "op": "DUP3"
    },
    "2533": {
      "op": "AND"
    },
    "2534": {
      "op": "SWAP2"
    },
    "2535": {
      "op": "POP"
    },
    "2536": {
      "op": "JUMPDEST"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2539": {
      "op": "DUP3"
    },
    "2540": {
      "op": "LT"
    },
    "2541": {
      "op": "DUP2"
    },
    "2542": {
      "op": "SUB"
    },
    "2543": {
      "op": "PUSH2",
      "value": "0xA08"
    },
    "2546": {
      "op": "JUMPI"
    },
    "2547": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2557": {
      "op": "MSTORE"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2562": {
      "op": "MSTORE"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2567": {
      "op": "REVERT"
    },
    "2568": {
      "op": "JUMPDEST"
    },
    "2569": {
      "op": "POP"
    },
    "2570": {
      "op": "SWAP2"
    },
    "2571": {
      "op": "SWAP1"
    },
    "2572": {
      "op": "POP"
    },
    "2573": {
      "jump": "o",
      "op": "JUMP"
    },
    "2574": {
      "op": "JUMPDEST"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2577": {
      "op": "DUP3"
    },
    "2578": {
      "op": "GT"
    },
    "2579": {
      "op": "ISZERO"
    },
    "2580": {
      "op": "PUSH2",
      "value": "0xA58"
    },
    "2583": {
      "op": "JUMPI"
    },
    "2584": {
      "op": "DUP1"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2587": {
      "op": "MSTORE"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2592": {
      "op": "KECCAK256"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2595": {
      "op": "DUP5"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2599": {
      "op": "SHR"
    },
    "2600": {
      "op": "DUP2"
    },
    "2601": {
      "op": "ADD"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2604": {
      "op": "DUP6"
    },
    "2605": {
      "op": "LT"
    },
    "2606": {
      "op": "ISZERO"
    },
    "2607": {
      "op": "PUSH2",
      "value": "0xA35"
    },
    "2610": {
      "op": "JUMPI"
    },
    "2611": {
      "op": "POP"
    },
    "2612": {
      "op": "DUP1"
    },
    "2613": {
      "op": "JUMPDEST"
    },
    "2614": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2616": {
      "op": "DUP5"
    },
    "2617": {
      "op": "ADD"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2620": {
      "op": "SHR"
    },
    "2621": {
      "op": "DUP3"
    },
    "2622": {
      "op": "ADD"
    },
    "2623": {
      "op": "SWAP2"
    },
    "2624": {
      "op": "POP"
    },
    "2625": {
      "op": "JUMPDEST"
    },
    "2626": {
      "op": "DUP2"
    },
    "2627": {
      "op": "DUP2"
    },
    "2628": {
      "op": "LT"
    },
    "2629": {
      "op": "ISZERO"
    },
    "2630": {
      "op": "PUSH2",
      "value": "0xA55"
    },
    "2633": {
      "op": "JUMPI"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2636": {
      "op": "DUP2"
    },
    "2637": {
      "op": "SSTORE"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "ADD"
    },
    "2641": {
      "op": "PUSH2",
      "value": "0xA41"
    },
    "2644": {
      "op": "JUMP"
    },
    "2645": {
      "op": "JUMPDEST"
    },
    "2646": {
      "op": "POP"
    },
    "2647": {
      "op": "POP"
    },
    "2648": {
      "op": "JUMPDEST"
    },
    "2649": {
      "op": "POP"
    },
    "2650": {
      "op": "POP"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "jump": "o",
      "op": "JUMP"
    },
    "2653": {
      "op": "JUMPDEST"
    },
    "2654": {
      "op": "DUP2"
    },
    "2655": {
      "op": "MLOAD"
    },
    "2656": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2665": {
      "op": "DUP2"
    },
    "2666": {
      "op": "GT"
    },
    "2667": {
      "op": "ISZERO"
    },
    "2668": {
      "op": "PUSH2",
      "value": "0xA77"
    },
    "2671": {
      "op": "JUMPI"
    },
    "2672": {
      "op": "PUSH2",
      "value": "0xA77"
    },
    "2675": {
      "op": "PUSH2",
      "value": "0x6E2"
    },
    "2678": {
      "jump": "i",
      "op": "JUMP"
    },
    "2679": {
      "op": "JUMPDEST"
    },
    "2680": {
      "op": "PUSH2",
      "value": "0xA8B"
    },
    "2683": {
      "op": "DUP2"
    },
    "2684": {
      "op": "PUSH2",
      "value": "0xA85"
    },
    "2687": {
      "op": "DUP5"
    },
    "2688": {
      "op": "SLOAD"
    },
    "2689": {
      "op": "PUSH2",
      "value": "0x9D4"
    },
    "2692": {
      "jump": "i",
      "op": "JUMP"
    },
    "2693": {
      "op": "JUMPDEST"
    },
    "2694": {
      "op": "DUP5"
    },
    "2695": {
      "op": "PUSH2",
      "value": "0xA0E"
    },
    "2698": {
      "jump": "i",
      "op": "JUMP"
    },
    "2699": {
      "op": "JUMPDEST"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2704": {
      "op": "DUP3"
    },
    "2705": {
      "op": "GT"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2708": {
      "op": "DUP2"
    },
    "2709": {
      "op": "EQ"
    },
    "2710": {
      "op": "PUSH2",
      "value": "0xABF"
    },
    "2713": {
      "op": "JUMPI"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2716": {
      "op": "DUP4"
    },
    "2717": {
      "op": "ISZERO"
    },
    "2718": {
      "op": "PUSH2",
      "value": "0xAA7"
    },
    "2721": {
      "op": "JUMPI"
    },
    "2722": {
      "op": "POP"
    },
    "2723": {
      "op": "DUP5"
    },
    "2724": {
      "op": "DUP3"
    },
    "2725": {
      "op": "ADD"
    },
    "2726": {
      "op": "MLOAD"
    },
    "2727": {
      "op": "JUMPDEST"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2730": {
      "op": "NOT"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2733": {
      "op": "DUP6"
    },
    "2734": {
      "op": "SWAP1"
    },
    "2735": {
      "op": "SHL"
    },
    "2736": {
      "op": "SHR"
    },
    "2737": {
      "op": "NOT"
    },
    "2738": {
      "op": "AND"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "DUP5"
    },
    "2742": {
      "op": "SWAP1"
    },
    "2743": {
      "op": "SHL"
    },
    "2744": {
      "op": "OR"
    },
    "2745": {
      "op": "DUP5"
    },
    "2746": {
      "op": "SSTORE"
    },
    "2747": {
      "op": "PUSH2",
      "value": "0xA55"
    },
    "2750": {
      "op": "JUMP"
    },
    "2751": {
      "op": "JUMPDEST"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2754": {
      "op": "DUP5"
    },
    "2755": {
      "op": "DUP2"
    },
    "2756": {
      "op": "MSTORE"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2759": {
      "op": "DUP2"
    },
    "2760": {
      "op": "KECCAK256"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2763": {
      "op": "NOT"
    },
    "2764": {
      "op": "DUP6"
    },
    "2765": {
      "op": "AND"
    },
    "2766": {
      "op": "SWAP2"
    },
    "2767": {
      "op": "JUMPDEST"
    },
    "2768": {
      "op": "DUP3"
    },
    "2769": {
      "op": "DUP2"
    },
    "2770": {
      "op": "LT"
    },
    "2771": {
      "op": "ISZERO"
    },
    "2772": {
      "op": "PUSH2",
      "value": "0xAEF"
    },
    "2775": {
      "op": "JUMPI"
    },
    "2776": {
      "op": "DUP8"
    },
    "2777": {
      "op": "DUP6"
    },
    "2778": {
      "op": "ADD"
    },
    "2779": {
      "op": "MLOAD"
    },
    "2780": {
      "op": "DUP3"
    },
    "2781": {
      "op": "SSTORE"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2784": {
      "op": "SWAP5"
    },
    "2785": {
      "op": "DUP6"
    },
    "2786": {
      "op": "ADD"
    },
    "2787": {
      "op": "SWAP5"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "SWAP1"
    },
    "2791": {
      "op": "SWAP3"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "op": "SWAP2"
    },
    "2794": {
      "op": "ADD"
    },
    "2795": {
      "op": "PUSH2",
      "value": "0xACF"
    },
    "2798": {
      "op": "JUMP"
    },
    "2799": {
      "op": "JUMPDEST"
    },
    "2800": {
      "op": "POP"
    },
    "2801": {
      "op": "DUP5"
    },
    "2802": {
      "op": "DUP3"
    },
    "2803": {
      "op": "LT"
    },
    "2804": {
      "op": "ISZERO"
    },
    "2805": {
      "op": "PUSH2",
      "value": "0xB0D"
    },
    "2808": {
      "op": "JUMPI"
    },
    "2809": {
      "op": "DUP7"
    },
    "2810": {
      "op": "DUP5"
    },
    "2811": {
      "op": "ADD"
    },
    "2812": {
      "op": "MLOAD"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2815": {
      "op": "NOT"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2818": {
      "op": "DUP8"
    },
    "2819": {
      "op": "SWAP1"
    },
    "2820": {
      "op": "SHL"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2823": {
      "op": "AND"
    },
    "2824": {
      "op": "SHR"
    },
    "2825": {
      "op": "NOT"
    },
    "2826": {
      "op": "AND"
    },
    "2827": {
      "op": "DUP2"
    },
    "2828": {
      "op": "SSTORE"
    },
    "2829": {
      "op": "JUMPDEST"
    },
    "2830": {
      "op": "POP"
    },
    "2831": {
      "op": "POP"
    },
    "2832": {
      "op": "POP"
    },
    "2833": {
      "op": "POP"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2836": {
      "op": "SWAP1"
    },
    "2837": {
      "op": "DUP2"
    },
    "2838": {
      "op": "SHL"
    },
    "2839": {
      "op": "ADD"
    },
    "2840": {
      "op": "SWAP1"
    },
    "2841": {
      "op": "SSTORE"
    },
    "2842": {
      "op": "POP"
    },
    "2843": {
      "jump": "o",
      "op": "JUMP"
    },
    "2844": {
      "op": "JUMPDEST"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2847": {
      "op": "DUP2"
    },
    "2848": {
      "op": "MSTORE"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2851": {
      "op": "PUSH2",
      "value": "0xB2F"
    },
    "2854": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2856": {
      "op": "DUP4"
    },
    "2857": {
      "op": "ADD"
    },
    "2858": {
      "op": "DUP6"
    },
    "2859": {
      "op": "PUSH2",
      "value": "0x82D"
    },
    "2862": {
      "jump": "i",
      "op": "JUMP"
    },
    "2863": {
      "op": "JUMPDEST"
    },
    "2864": {
      "op": "DUP3"
    },
    "2865": {
      "op": "DUP2"
    },
    "2866": {
      "op": "SUB"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2869": {
      "op": "DUP5"
    },
    "2870": {
      "op": "ADD"
    },
    "2871": {
      "op": "MSTORE"
    },
    "2872": {
      "op": "PUSH2",
      "value": "0xB41"
    },
    "2875": {
      "op": "DUP2"
    },
    "2876": {
      "op": "DUP6"
    },
    "2877": {
      "op": "PUSH2",
      "value": "0x82D"
    },
    "2880": {
      "jump": "i",
      "op": "JUMP"
    },
    "2881": {
      "op": "JUMPDEST"
    },
    "2882": {
      "op": "SWAP6"
    },
    "2883": {
      "op": "SWAP5"
    },
    "2884": {
      "op": "POP"
    },
    "2885": {
      "op": "POP"
    },
    "2886": {
      "op": "POP"
    },
    "2887": {
      "op": "POP"
    },
    "2888": {
      "op": "POP"
    },
    "2889": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a55eb375eec53cad2c2af3b7c0369bdb263e201f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract UserRegistry {\n    struct User {\n        string nick;\n        string public_key;\n        uint256[] expertFields;\n        mapping(uint256 => bool) hasExpertField; // For checking duplicates\n        string additional_data;\n        bool is_bot;\n        bool exists;\n    }\n\n    mapping(string => User) private users;\n    mapping(string => string) private addressToNick;\n\n    event UserRegistered(string nick, string public_key);\n    event ExpertFieldAdded(string nick, uint256 fieldId);\n\n    function registerUser(\n        string memory _nick,\n        string memory _publicKey,\n        string memory _additionalData,\n        bool _isBot\n    ) public returns (string memory) {\n        require(!users[_nick].exists, \"nick_already_taken\");\n        require(bytes(addressToNick[_publicKey]).length == 0, \"address_already_registered\");\n\n        User storage user = users[_nick];\n        user.nick = _nick;\n        user.public_key = _publicKey;\n        user.additional_data = _additionalData;\n        user.is_bot = _isBot;\n        user.exists = true;\n\n        addressToNick[_publicKey] = _nick;\n\n        emit UserRegistered(_nick, _publicKey);\n\n        return \"register_success\";\n    }\n\n    function addExpertField(string memory _nick, uint256 _fieldId) external {\n        require(users[_nick].exists, \"user_not_exist\");\n        User storage user = users[_nick];\n\n        require(!user.hasExpertField[_fieldId], \"field_already_added\");\n\n        user.expertFields.push(_fieldId);\n        user.hasExpertField[_fieldId] = true;\n\n        emit ExpertFieldAdded(_nick, _fieldId);\n    }\n\n    function getUserInfo(string memory _nick)\n        public\n        view\n        returns (\n            string memory public_key,\n            uint256[] memory expertFields,\n            string memory additional_data,\n            bool is_bot\n        )\n    {\n        require(users[_nick].exists, \"user_not_exist\");\n        User storage user = users[_nick];\n        return (\n            user.public_key,\n            user.expertFields,\n            user.additional_data,\n            user.is_bot\n        );\n    }\n\n    function getNickByAddress(string memory _address) external view returns (string memory) {\n        return addressToNick[_address];\n    }\n}\n",
  "sourceMap": "57:2227:3:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/UserRegistry.sol",
  "type": "contract"
}