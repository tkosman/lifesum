{"compilers":[{"contractTypes":["ReputationManager"],"name":"solidity","settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"contracts/ReputationManager.sol":{"":["ast"],"*":["abi","bin-runtime","devdoc","userdoc","evm.bytecode.object","evm.bytecode.sourceMap","evm.deployedBytecode.object"]}}},"version":"0.8.28+commit.7893614a"}],"contractTypes":{"ExpertCaseManager":{"abi":[{"inputs":[{"internalType":"address","name":"_reputationManagerAddress","type":"address"},{"internalType":"address","name":"_userRegistryAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"ECId","type":"uint256"},{"indexed":false,"internalType":"uint8","name":"winningOption","type":"uint8"}],"name":"ExpertCaseClosed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"ECId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"itemId","type":"uint256"},{"indexed":false,"internalType":"string","name":"openedBy","type":"string"}],"name":"ExpertCaseOpened","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"ECId","type":"uint256"},{"indexed":false,"internalType":"string","name":"voter","type":"string"},{"indexed":false,"internalType":"uint8","name":"option","type":"uint8"}],"name":"VoteCast","type":"event"},{"inputs":[{"internalType":"uint256","name":"_ECId","type":"uint256"},{"internalType":"uint8","name":"_option","type":"uint8"},{"internalType":"string","name":"_publicKey","type":"string"}],"name":"castVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ECId","type":"uint256"}],"name":"closeExpertCase","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ECId","type":"uint256"}],"name":"getExpertCase","outputs":[{"internalType":"uint256","name":"itemId","type":"uint256"},{"internalType":"uint256","name":"fieldId","type":"uint256"},{"internalType":"uint256","name":"minReputation","type":"uint256"},{"internalType":"bool","name":"botAllowed","type":"bool"},{"internalType":"string","name":"ECInfo","type":"string"},{"internalType":"bool","name":"isOpen","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_itemId","type":"uint256"},{"internalType":"uint256","name":"_fieldId","type":"uint256"},{"internalType":"uint256","name":"_minReputation","type":"uint256"},{"internalType":"string","name":"_publicKey","type":"string"},{"internalType":"bool","name":"_botAllowed","type":"bool"},{"internalType":"string","name":"_ECInfo","type":"string"}],"name":"openExpertCase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"contractName":"ExpertCaseManager","deploymentBytecode":{"bytecode":"0x6080604052348015600e575f5ffd5b5060405161136e38038061136e833981016040819052602b916075565b600280546001600160a01b039384166001600160a01b0319918216179091556003805492909316911617905560a1565b80516001600160a01b03811681146070575f5ffd5b919050565b5f5f604083850312156085575f5ffd5b608c83605b565b9150609860208401605b565b90509250929050565b6112c0806100ae5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80632e0e16a41461004e5780633f294d2514610063578063470b7622146100915780635830f441146100a4575b5f5ffd5b61006161005c366004610be1565b6100c5565b005b610076610071366004610be1565b61050a565b60405161008896959493929190610c26565b60405180910390f35b61006161009f366004610d25565b610621565b6100b76100b2366004610d8f565b610b2b565b604051908152602001610088565b5f818152602081905260409020600b0154610100900460ff166101035760405162461bcd60e51b81526004016100fa90610e20565b60405180910390fd5b5f818152602081905260409020600b015460ff166101575760405162461bcd60e51b81526020600482015260116024820152701150d7d85b1c9958591e57d8db1bdcd959607a1b60448201526064016100fa565b5f818152602081905260408120600b8101805460ff191690559080805b600a8401548110156101df575f84600a01828154811061019657610196610e46565b5f91825260208083208183040154601f9092166101000a90910460ff1680835260098801909152604090912054909150838111156101d5578093508194505b5050600101610174565b505f805b60088501548110156102db575f85600801828154811061020557610205610e46565b905f5260205f2001805461021890610e5a565b80601f016020809104026020016040519081016040528092919081815260200182805461024490610e5a565b801561028f5780601f106102665761010080835404028352916020019161028f565b820191905f5260205f20905b81548152906001019060200180831161027257829003601f168201915b505050505090508460ff1686600701826040516102ac9190610e92565b9081526040519081900360200190205460ff16036102d2576102cf600184610ebc565b92505b506001016101e3565b5060088401545f906102ee908390610ed5565b90505f600a82136102ff5781610302565b600a5b90505f5b60088701548110156104c5575f87600801828154811061032857610328610e46565b905f5260205f2001805461033b90610e5a565b80601f016020809104026020016040519081016040528092919081815260200182805461036790610e5a565b80156103b25780601f10610389576101008083540402835291602001916103b2565b820191905f5260205f20905b81548152906001019060200180831161039557829003601f168201915b505050505090505f88600701826040516103cc9190610e92565b9081526040519081900360200190205460028a015460ff918216925090891682036104575760025460405163e08240f760e01b81526001600160a01b039091169063e08240f79061042590869085908a90600401610ef4565b5f604051808303815f87803b15801561043c575f5ffd5b505af115801561044e573d5f5f3e3d5ffd5b505050506104ba565b60025460405163e08240f760e01b81526001600160a01b039091169063e08240f79061048c90869085905f1990600401610ef4565b5f604051808303815f87803b1580156104a3575f5ffd5b505af11580156104b5573d5f5f3e3d5ffd5b505050505b505050600101610306565b506040805188815260ff871660208201527f8bf7d50dd68e653dd0abd8b48091213b1c28a416043142408014a3a03a9e9d0f910160405180910390a150505050505050565b5f818152602081905260408120600b01548190819081906060908290610100900460ff1661054a5760405162461bcd60e51b81526004016100fa90610e20565b5f8781526020819052604090206001810154600282015460038301546004840154600b85015460058601805460ff93841693919290911690829061058d90610e5a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b990610e5a565b80156106045780601f106105db57610100808354040283529160200191610604565b820191905f5260205f20905b8154815290600101906020018083116105e757829003601f168201915b505050505091509650965096509650965096505091939550919395565b5f838152602081905260409020600b0154610100900460ff166106565760405162461bcd60e51b81526004016100fa90610e20565b5f838152602081905260409020600b015460ff166106a25760405162461bcd60e51b81526020600482015260096024820152681150d7d8db1bdcd95960ba1b60448201526064016100fa565b5f838152602081905260408082206003549151630438fcfb60e31b81529092916001600160a01b0316906321c7e7d8906106e0908690600401610f1e565b5f60405180830381865afa1580156106fa573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107219190810190610f84565b90505f8151116107695760405162461bcd60e51b81526020600482015260136024820152721d5cd95c97db9bdd17dc9959da5cdd195c9959606a1b60448201526064016100fa565b600354604051637c9b7fdd60e01b81525f9182916001600160a01b0390911690637c9b7fdd9061079d908690600401610f1e565b5f60405180830381865afa1580156107b7573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107de9190810190610fce565b600488015492955093505060ff169050806107f7575080155b6108365760405162461bcd60e51b815260206004820152601060248201526f189bdd1cd7db9bdd17d85b1b1bddd95960821b60448201526064016100fa565b5f805b835181101561087757856002015484828151811061085957610859610e46565b60200260200101510361086f5760019150610877565b600101610839565b50806108bb5760405162461bcd60e51b81526020600482015260136024820152721b9bdd17d95e1c195c9d17da5b97d99a595b19606a1b60448201526064016100fa565b6002805490860154604051630d1e914960e11b81525f926001600160a01b031691631a3d2292916108f0918b916004016110e1565b602060405180830381865afa15801561090b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061092f9190611102565b9050856003015481101561097a5760405162461bcd60e51b815260206004820152601260248201527172657075746174696f6e5f746f6f5f6c6f7760701b60448201526064016100fa565b856006018760405161098c9190610e92565b9081526040519081900360200190205460ff16156109dc5760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e57dd9bdd1959609a1b60448201526064016100fa565b600186600601886040516109f09190610e92565b9081526040805160209281900383019020805460ff19169315159390931790925560ff8a165f90815260098901909152908120805460019290610a34908490610ebc565b92505081905550878660070188604051610a4e9190610e92565b90815260405160209181900382019020805460ff191660ff93909316929092179091556008870180546001810182555f91825291902001610a8f8882611165565b5060ff88165f908152600987016020526040902054600103610ae557600a860180546001810182555f918252602091829020918104909101805460ff808c16601f9094166101000a938402930219169190911790555b7fb12b0cc09155fe7e138d6dc629d9423e647ccb8ed46efad953a0453e6d5ce2a789888a604051610b1893929190611220565b60405180910390a1505050505050505050565b600180545f9182610b3b8361124b565b9091555050600180545f818152602081905260409020818155918201899055600282018890556003820187905560048201805460ff19168615151790559060058101610b878582611165565b50600b8101805461ffff19166101011790556040517f183f3e56a09c858fdcbb19942e55ee3109804613bb598c2a8925cda073ee85d790610bcd9084908c908a90611263565b60405180910390a150979650505050505050565b5f60208284031215610bf1575f5ffd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b868152856020820152846040820152831515606082015260c060808201525f610c5260c0830185610bf8565b905082151560a0830152979650505050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ca457610ca4610c67565b604052919050565b5f67ffffffffffffffff821115610cc557610cc5610c67565b50601f01601f191660200190565b5f82601f830112610ce2575f5ffd5b8135610cf5610cf082610cac565b610c7b565b818152846020838601011115610d09575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f60608486031215610d37575f5ffd5b83359250602084013560ff81168114610d4e575f5ffd5b9150604084013567ffffffffffffffff811115610d69575f5ffd5b610d7586828701610cd3565b9150509250925092565b8015158114610d8c575f5ffd5b50565b5f5f5f5f5f5f60c08789031215610da4575f5ffd5b863595506020870135945060408701359350606087013567ffffffffffffffff811115610dcf575f5ffd5b610ddb89828a01610cd3565b9350506080870135610dec81610d7f565b915060a087013567ffffffffffffffff811115610e07575f5ffd5b610e1389828a01610cd3565b9150509295509295509295565b6020808252600c908201526b1150d7db9bdd17d95e1a5cdd60a21b604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b600181811c90821680610e6e57607f821691505b602082108103610e8c57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f82518060208501845e5f920191825250919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610ecf57610ecf610ea8565b92915050565b5f82610eef57634e487b7160e01b5f52601260045260245ffd5b500490565b606081525f610f066060830186610bf8565b9050836020830152825f0b6040830152949350505050565b602081525f610f306020830184610bf8565b9392505050565b5f82601f830112610f46575f5ffd5b8151610f54610cf082610cac565b818152846020838601011115610f68575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f60208284031215610f94575f5ffd5b815167ffffffffffffffff811115610faa575f5ffd5b610fb684828501610f37565b949350505050565b8051610fc981610d7f565b919050565b5f5f5f5f60808587031215610fe1575f5ffd5b845167ffffffffffffffff811115610ff7575f5ffd5b61100387828801610f37565b945050602085015167ffffffffffffffff81111561101f575f5ffd5b8501601f8101871361102f575f5ffd5b805167ffffffffffffffff81111561104957611049610c67565b8060051b61105960208201610c7b565b9182526020818401810192908101908a841115611074575f5ffd5b6020850194505b8385101561109a5784518083526020958601959093509091019061107b565b8097505050505050604085015167ffffffffffffffff8111156110bb575f5ffd5b6110c787828801610f37565b9250506110d660608601610fbe565b905092959194509250565b604081525f6110f36040830185610bf8565b90508260208301529392505050565b5f60208284031215611112575f5ffd5b5051919050565b601f82111561116057805f5260205f20601f840160051c8101602085101561113e5750805b601f840160051c820191505b8181101561115d575f815560010161114a565b50505b505050565b815167ffffffffffffffff81111561117f5761117f610c67565b6111938161118d8454610e5a565b84611119565b6020601f8211600181146111c5575f83156111ae5750848201515b5f19600385901b1c1916600184901b17845561115d565b5f84815260208120601f198516915b828110156111f457878501518255602094850194600190920191016111d4565b508482101561121157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b838152606060208201525f6112386060830185610bf8565b905060ff83166040830152949350505050565b5f6001820161125c5761125c610ea8565b5060010190565b838152826020820152606060408201525f6112816060830184610bf8565b9594505050505056fea264697066735822122051ebacc3bd7c221fe022356cabab7707f48ddedc103e88c7e5a7aeed1a3878f164736f6c634300081c0033"},"devdoc":{"kind":"dev","methods":{},"version":1},"methodIdentifiers":{"castVote(uint256,uint8,string)":"0x470b7622","closeExpertCase(uint256)":"0x2e0e16a4","getExpertCase(uint256)":"0x3f294d25","openExpertCase(uint256,uint256,uint256,string,bool,string)":"0x5830f441"},"runtimeBytecode":{"bytecode":"0x608060405234801561000f575f5ffd5b506004361061004a575f3560e01c80632e0e16a41461004e5780633f294d2514610063578063470b7622146100915780635830f441146100a4575b5f5ffd5b61006161005c366004610be1565b6100c5565b005b610076610071366004610be1565b61050a565b60405161008896959493929190610c26565b60405180910390f35b61006161009f366004610d25565b610621565b6100b76100b2366004610d8f565b610b2b565b604051908152602001610088565b5f818152602081905260409020600b0154610100900460ff166101035760405162461bcd60e51b81526004016100fa90610e20565b60405180910390fd5b5f818152602081905260409020600b015460ff166101575760405162461bcd60e51b81526020600482015260116024820152701150d7d85b1c9958591e57d8db1bdcd959607a1b60448201526064016100fa565b5f818152602081905260408120600b8101805460ff191690559080805b600a8401548110156101df575f84600a01828154811061019657610196610e46565b5f91825260208083208183040154601f9092166101000a90910460ff1680835260098801909152604090912054909150838111156101d5578093508194505b5050600101610174565b505f805b60088501548110156102db575f85600801828154811061020557610205610e46565b905f5260205f2001805461021890610e5a565b80601f016020809104026020016040519081016040528092919081815260200182805461024490610e5a565b801561028f5780601f106102665761010080835404028352916020019161028f565b820191905f5260205f20905b81548152906001019060200180831161027257829003601f168201915b505050505090508460ff1686600701826040516102ac9190610e92565b9081526040519081900360200190205460ff16036102d2576102cf600184610ebc565b92505b506001016101e3565b5060088401545f906102ee908390610ed5565b90505f600a82136102ff5781610302565b600a5b90505f5b60088701548110156104c5575f87600801828154811061032857610328610e46565b905f5260205f2001805461033b90610e5a565b80601f016020809104026020016040519081016040528092919081815260200182805461036790610e5a565b80156103b25780601f10610389576101008083540402835291602001916103b2565b820191905f5260205f20905b81548152906001019060200180831161039557829003601f168201915b505050505090505f88600701826040516103cc9190610e92565b9081526040519081900360200190205460028a015460ff918216925090891682036104575760025460405163e08240f760e01b81526001600160a01b039091169063e08240f79061042590869085908a90600401610ef4565b5f604051808303815f87803b15801561043c575f5ffd5b505af115801561044e573d5f5f3e3d5ffd5b505050506104ba565b60025460405163e08240f760e01b81526001600160a01b039091169063e08240f79061048c90869085905f1990600401610ef4565b5f604051808303815f87803b1580156104a3575f5ffd5b505af11580156104b5573d5f5f3e3d5ffd5b505050505b505050600101610306565b506040805188815260ff871660208201527f8bf7d50dd68e653dd0abd8b48091213b1c28a416043142408014a3a03a9e9d0f910160405180910390a150505050505050565b5f818152602081905260408120600b01548190819081906060908290610100900460ff1661054a5760405162461bcd60e51b81526004016100fa90610e20565b5f8781526020819052604090206001810154600282015460038301546004840154600b85015460058601805460ff93841693919290911690829061058d90610e5a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b990610e5a565b80156106045780601f106105db57610100808354040283529160200191610604565b820191905f5260205f20905b8154815290600101906020018083116105e757829003601f168201915b505050505091509650965096509650965096505091939550919395565b5f838152602081905260409020600b0154610100900460ff166106565760405162461bcd60e51b81526004016100fa90610e20565b5f838152602081905260409020600b015460ff166106a25760405162461bcd60e51b81526020600482015260096024820152681150d7d8db1bdcd95960ba1b60448201526064016100fa565b5f838152602081905260408082206003549151630438fcfb60e31b81529092916001600160a01b0316906321c7e7d8906106e0908690600401610f1e565b5f60405180830381865afa1580156106fa573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107219190810190610f84565b90505f8151116107695760405162461bcd60e51b81526020600482015260136024820152721d5cd95c97db9bdd17dc9959da5cdd195c9959606a1b60448201526064016100fa565b600354604051637c9b7fdd60e01b81525f9182916001600160a01b0390911690637c9b7fdd9061079d908690600401610f1e565b5f60405180830381865afa1580156107b7573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526107de9190810190610fce565b600488015492955093505060ff169050806107f7575080155b6108365760405162461bcd60e51b815260206004820152601060248201526f189bdd1cd7db9bdd17d85b1b1bddd95960821b60448201526064016100fa565b5f805b835181101561087757856002015484828151811061085957610859610e46565b60200260200101510361086f5760019150610877565b600101610839565b50806108bb5760405162461bcd60e51b81526020600482015260136024820152721b9bdd17d95e1c195c9d17da5b97d99a595b19606a1b60448201526064016100fa565b6002805490860154604051630d1e914960e11b81525f926001600160a01b031691631a3d2292916108f0918b916004016110e1565b602060405180830381865afa15801561090b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061092f9190611102565b9050856003015481101561097a5760405162461bcd60e51b815260206004820152601260248201527172657075746174696f6e5f746f6f5f6c6f7760701b60448201526064016100fa565b856006018760405161098c9190610e92565b9081526040519081900360200190205460ff16156109dc5760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e57dd9bdd1959609a1b60448201526064016100fa565b600186600601886040516109f09190610e92565b9081526040805160209281900383019020805460ff19169315159390931790925560ff8a165f90815260098901909152908120805460019290610a34908490610ebc565b92505081905550878660070188604051610a4e9190610e92565b90815260405160209181900382019020805460ff191660ff93909316929092179091556008870180546001810182555f91825291902001610a8f8882611165565b5060ff88165f908152600987016020526040902054600103610ae557600a860180546001810182555f918252602091829020918104909101805460ff808c16601f9094166101000a938402930219169190911790555b7fb12b0cc09155fe7e138d6dc629d9423e647ccb8ed46efad953a0453e6d5ce2a789888a604051610b1893929190611220565b60405180910390a1505050505050505050565b600180545f9182610b3b8361124b565b9091555050600180545f818152602081905260409020818155918201899055600282018890556003820187905560048201805460ff19168615151790559060058101610b878582611165565b50600b8101805461ffff19166101011790556040517f183f3e56a09c858fdcbb19942e55ee3109804613bb598c2a8925cda073ee85d790610bcd9084908c908a90611263565b60405180910390a150979650505050505050565b5f60208284031215610bf1575f5ffd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b868152856020820152846040820152831515606082015260c060808201525f610c5260c0830185610bf8565b905082151560a0830152979650505050505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ca457610ca4610c67565b604052919050565b5f67ffffffffffffffff821115610cc557610cc5610c67565b50601f01601f191660200190565b5f82601f830112610ce2575f5ffd5b8135610cf5610cf082610cac565b610c7b565b818152846020838601011115610d09575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f60608486031215610d37575f5ffd5b83359250602084013560ff81168114610d4e575f5ffd5b9150604084013567ffffffffffffffff811115610d69575f5ffd5b610d7586828701610cd3565b9150509250925092565b8015158114610d8c575f5ffd5b50565b5f5f5f5f5f5f60c08789031215610da4575f5ffd5b863595506020870135945060408701359350606087013567ffffffffffffffff811115610dcf575f5ffd5b610ddb89828a01610cd3565b9350506080870135610dec81610d7f565b915060a087013567ffffffffffffffff811115610e07575f5ffd5b610e1389828a01610cd3565b9150509295509295509295565b6020808252600c908201526b1150d7db9bdd17d95e1a5cdd60a21b604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b600181811c90821680610e6e57607f821691505b602082108103610e8c57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f82518060208501845e5f920191825250919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610ecf57610ecf610ea8565b92915050565b5f82610eef57634e487b7160e01b5f52601260045260245ffd5b500490565b606081525f610f066060830186610bf8565b9050836020830152825f0b6040830152949350505050565b602081525f610f306020830184610bf8565b9392505050565b5f82601f830112610f46575f5ffd5b8151610f54610cf082610cac565b818152846020838601011115610f68575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f60208284031215610f94575f5ffd5b815167ffffffffffffffff811115610faa575f5ffd5b610fb684828501610f37565b949350505050565b8051610fc981610d7f565b919050565b5f5f5f5f60808587031215610fe1575f5ffd5b845167ffffffffffffffff811115610ff7575f5ffd5b61100387828801610f37565b945050602085015167ffffffffffffffff81111561101f575f5ffd5b8501601f8101871361102f575f5ffd5b805167ffffffffffffffff81111561104957611049610c67565b8060051b61105960208201610c7b565b9182526020818401810192908101908a841115611074575f5ffd5b6020850194505b8385101561109a5784518083526020958601959093509091019061107b565b8097505050505050604085015167ffffffffffffffff8111156110bb575f5ffd5b6110c787828801610f37565b9250506110d660608601610fbe565b905092959194509250565b604081525f6110f36040830185610bf8565b90508260208301529392505050565b5f60208284031215611112575f5ffd5b5051919050565b601f82111561116057805f5260205f20601f840160051c8101602085101561113e5750805b601f840160051c820191505b8181101561115d575f815560010161114a565b50505b505050565b815167ffffffffffffffff81111561117f5761117f610c67565b6111938161118d8454610e5a565b84611119565b6020601f8211600181146111c5575f83156111ae5750848201515b5f19600385901b1c1916600184901b17845561115d565b5f84815260208120601f198516915b828110156111f457878501518255602094850194600190920191016111d4565b508482101561121157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b838152606060208201525f6112386060830185610bf8565b905060ff83166040830152949350505050565b5f6001820161125c5761125c610ea8565b5060010190565b838152826020820152606060408201525f6112816060830184610bf8565b9594505050505056fea264697066735822122051ebacc3bd7c221fe022356cabab7707f48ddedc103e88c7e5a7aeed1a3878f164736f6c634300081c0033"},"sourceId":"contracts/ExpertCaseManager.sol","sourcemap":"657:5861:0:-:0;;;1512:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1599:17;:65;;-1:-1:-1;;;;;1599:65:0;;;-1:-1:-1;;;;;;1599:65:0;;;;;;;1674:12;:50;;;;;;;;;;;657:5861;;14:177:4;93:13;;-1:-1:-1;;;;;135:31:4;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;657:5861:0;;;;;;","userdoc":{"kind":"user","methods":{},"version":1}},"IReputationManager":{"abi":[{"inputs":[{"internalType":"string","name":"_user","type":"string"},{"internalType":"uint256","name":"_fieldId","type":"uint256"}],"name":"getReputation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_user","type":"string"},{"internalType":"uint256","name":"_fieldId","type":"uint256"},{"internalType":"int8","name":"_score","type":"int8"}],"name":"updateReputation","outputs":[],"stateMutability":"nonpayable","type":"function"}],"contractName":"IReputationManager","deploymentBytecode":{"bytecode":"0x"},"devdoc":{"kind":"dev","methods":{},"version":1},"methodIdentifiers":{"getReputation(string,uint256)":"0x1a3d2292","updateReputation(string,uint256,int8)":"0xe08240f7"},"runtimeBytecode":{"bytecode":"0x"},"sourceId":"contracts/ExpertCaseManager.sol","sourcemap":"","userdoc":{"kind":"user","methods":{},"version":1}},"IUserRegistry":{"abi":[{"inputs":[{"internalType":"string","name":"_address","type":"string"}],"name":"getNickByAddress","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_nick","type":"string"}],"name":"getUserInfo","outputs":[{"internalType":"string","name":"public_key","type":"string"},{"internalType":"uint256[]","name":"expertFields","type":"uint256[]"},{"internalType":"string","name":"additional_data","type":"string"},{"internalType":"bool","name":"is_bot","type":"bool"}],"stateMutability":"view","type":"function"}],"contractName":"IUserRegistry","deploymentBytecode":{"bytecode":"0x"},"devdoc":{"kind":"dev","methods":{},"version":1},"methodIdentifiers":{"getNickByAddress(string)":"0x21c7e7d8","getUserInfo(string)":"0x7c9b7fdd"},"runtimeBytecode":{"bytecode":"0x"},"sourceId":"contracts/ExpertCaseManager.sol","sourcemap":"","userdoc":{"kind":"user","methods":{},"version":1}},"ItemRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"itemId","type":"uint256"},{"indexed":false,"internalType":"string","name":"category","type":"string"},{"indexed":false,"internalType":"string","name":"owner","type":"string"}],"name":"ItemAdded","type":"event"},{"inputs":[{"internalType":"string","name":"_category","type":"string"},{"internalType":"string","name":"_itemInfo","type":"string"},{"internalType":"string","name":"_publicKey","type":"string"}],"name":"addItem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_itemId","type":"uint256"}],"name":"getItem","outputs":[{"internalType":"string","name":"category","type":"string"},{"internalType":"string","name":"itemInfo","type":"string"},{"internalType":"string","name":"owner","type":"string"}],"stateMutability":"view","type":"function"}],"contractName":"ItemRegistry","deploymentBytecode":{"bytecode":"0x6080604052348015600e575f5ffd5b5061070e8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80633129e77314610038578063339ba34914610063575b5f5ffd5b61004b610046366004610397565b610084565b60405161005a939291906103dc565b60405180910390f35b6100766100713660046104bd565b6102a8565b60405190815260200161005a565b5f818152602081905260409020600401546060908190819060ff166100e05760405162461bcd60e51b815260206004820152600e60248201526d1a5d195b57db9bdd17d95e1a5cdd60921b604482015260640160405180910390fd5b5f8481526020819052604090206001810180546002830190600384019083906101089061054b565b80601f01602080910402602001604051908101604052809291908181526020018280546101349061054b565b801561017f5780601f106101565761010080835404028352916020019161017f565b820191905f5260205f20905b81548152906001019060200180831161016257829003601f168201915b505050505092508180546101929061054b565b80601f01602080910402602001604051908101604052809291908181526020018280546101be9061054b565b80156102095780601f106101e057610100808354040283529160200191610209565b820191905f5260205f20905b8154815290600101906020018083116101ec57829003601f168201915b5050505050915080805461021c9061054b565b80601f01602080910402602001604051908101604052809291908181526020018280546102489061054b565b80156102935780601f1061026a57610100808354040283529160200191610293565b820191905f5260205f20905b81548152906001019060200180831161027657829003601f168201915b50505050509050935093509350509193909250565b600180545f91826102b883610583565b9091555050600180546040805160a081018252828152602080820189815282840189905260608301889052608083018690525f85815291829052929020815181559151929390929082019061030d90826105f3565b506040820151600282019061032290826105f3565b506060820151600382019061033790826105f3565b50608091909101516004909101805460ff19169115159190911790556040517f9a2ee66360acc47ed8f7c49b2492e1777a6fed40c18be4eddb5b242f7098a4af90610387908390889087906106ae565b60405180910390a1949350505050565b5f602082840312156103a7575f5ffd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b606081525f6103ee60608301866103ae565b828103602084015261040081866103ae565b9050828103604084015261041481856103ae565b9695505050505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610441575f5ffd5b813567ffffffffffffffff81111561045b5761045b61041e565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561048a5761048a61041e565b6040528181528382016020018510156104a1575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f606084860312156104cf575f5ffd5b833567ffffffffffffffff8111156104e5575f5ffd5b6104f186828701610432565b935050602084013567ffffffffffffffff81111561050d575f5ffd5b61051986828701610432565b925050604084013567ffffffffffffffff811115610535575f5ffd5b61054186828701610432565b9150509250925092565b600181811c9082168061055f57607f821691505b60208210810361057d57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f600182016105a057634e487b7160e01b5f52601160045260245ffd5b5060010190565b601f8211156105ee57805f5260205f20601f840160051c810160208510156105cc5750805b601f840160051c820191505b818110156105eb575f81556001016105d8565b50505b505050565b815167ffffffffffffffff81111561060d5761060d61041e565b6106218161061b845461054b565b846105a7565b6020601f821160018114610653575f831561063c5750848201515b5f19600385901b1c1916600184901b1784556105eb565b5f84815260208120601f198516915b828110156106825787850151825560209485019460019092019101610662565b508482101561069f57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b838152606060208201525f6106c660608301856103ae565b828103604084015261041481856103ae56fea264697066735822122087aca55c4756d98d9718907a2355a50bdd791d5fc3bf1c8be457c1cc3129c9be64736f6c634300081c0033"},"devdoc":{"kind":"dev","methods":{},"version":1},"methodIdentifiers":{"addItem(string,string,string)":"0x339ba349","getItem(uint256)":"0x3129e773"},"runtimeBytecode":{"bytecode":"0x608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80633129e77314610038578063339ba34914610063575b5f5ffd5b61004b610046366004610397565b610084565b60405161005a939291906103dc565b60405180910390f35b6100766100713660046104bd565b6102a8565b60405190815260200161005a565b5f818152602081905260409020600401546060908190819060ff166100e05760405162461bcd60e51b815260206004820152600e60248201526d1a5d195b57db9bdd17d95e1a5cdd60921b604482015260640160405180910390fd5b5f8481526020819052604090206001810180546002830190600384019083906101089061054b565b80601f01602080910402602001604051908101604052809291908181526020018280546101349061054b565b801561017f5780601f106101565761010080835404028352916020019161017f565b820191905f5260205f20905b81548152906001019060200180831161016257829003601f168201915b505050505092508180546101929061054b565b80601f01602080910402602001604051908101604052809291908181526020018280546101be9061054b565b80156102095780601f106101e057610100808354040283529160200191610209565b820191905f5260205f20905b8154815290600101906020018083116101ec57829003601f168201915b5050505050915080805461021c9061054b565b80601f01602080910402602001604051908101604052809291908181526020018280546102489061054b565b80156102935780601f1061026a57610100808354040283529160200191610293565b820191905f5260205f20905b81548152906001019060200180831161027657829003601f168201915b50505050509050935093509350509193909250565b600180545f91826102b883610583565b9091555050600180546040805160a081018252828152602080820189815282840189905260608301889052608083018690525f85815291829052929020815181559151929390929082019061030d90826105f3565b506040820151600282019061032290826105f3565b506060820151600382019061033790826105f3565b50608091909101516004909101805460ff19169115159190911790556040517f9a2ee66360acc47ed8f7c49b2492e1777a6fed40c18be4eddb5b242f7098a4af90610387908390889087906106ae565b60405180910390a1949350505050565b5f602082840312156103a7575f5ffd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b606081525f6103ee60608301866103ae565b828103602084015261040081866103ae565b9050828103604084015261041481856103ae565b9695505050505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610441575f5ffd5b813567ffffffffffffffff81111561045b5761045b61041e565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561048a5761048a61041e565b6040528181528382016020018510156104a1575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f5f606084860312156104cf575f5ffd5b833567ffffffffffffffff8111156104e5575f5ffd5b6104f186828701610432565b935050602084013567ffffffffffffffff81111561050d575f5ffd5b61051986828701610432565b925050604084013567ffffffffffffffff811115610535575f5ffd5b61054186828701610432565b9150509250925092565b600181811c9082168061055f57607f821691505b60208210810361057d57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f600182016105a057634e487b7160e01b5f52601160045260245ffd5b5060010190565b601f8211156105ee57805f5260205f20601f840160051c810160208510156105cc5750805b601f840160051c820191505b818110156105eb575f81556001016105d8565b50505b505050565b815167ffffffffffffffff81111561060d5761060d61041e565b6106218161061b845461054b565b846105a7565b6020601f821160018114610653575f831561063c5750848201515b5f19600385901b1c1916600184901b1784556105eb565b5f84815260208120601f198516915b828110156106825787850151825560209485019460019092019101610662565b508482101561069f57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b838152606060208201525f6106c660608301856103ae565b828103604084015261041481856103ae56fea264697066735822122087aca55c4756d98d9718907a2355a50bdd791d5fc3bf1c8be457c1cc3129c9be64736f6c634300081c0033"},"sourceId":"contracts/ItemRegistry.sol","sourcemap":"57:1196:1:-:0;;;;;;;;;;;;;;;;;;;","userdoc":{"kind":"user","methods":{},"version":1}},"ReputationManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"user","type":"string"},{"indexed":true,"internalType":"uint256","name":"fieldId","type":"uint256"},{"indexed":false,"internalType":"int8","name":"score","type":"int8"}],"name":"ReputationUpdated","type":"event"},{"inputs":[],"name":"MAX_RECENT_SCORES","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_user","type":"string"},{"internalType":"uint256","name":"_fieldId","type":"uint256"}],"name":"getReputation","outputs":[{"internalType":"int256","name":"sumRecentScores","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_user","type":"string"},{"internalType":"uint256","name":"_fieldId","type":"uint256"},{"internalType":"int8","name":"_score","type":"int8"}],"name":"updateReputation","outputs":[],"stateMutability":"nonpayable","type":"function"}],"contractName":"ReputationManager","deploymentBytecode":{"bytecode":"0x6080604052348015600e575f5ffd5b506104418061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80631a3d22921461004357806355aeb22f14610068578063e08240f714610070575b5f5ffd5b6100566100513660046102a6565b610085565b60405190815260200160405180910390f35b610056606481565b61008361007e3660046102e8565b61010c565b005b5f5f5f846040516100969190610344565b90815260200160405180910390205f8481526020019081526020015f2090505f60648260010154116100cc5781600101546100cf565b60645b5f93509050825b81811015610103575f8181526002840160205260408120546100f9910b8561036e565b93506001016100d6565b50505092915050565b5f5f8460405161011c9190610344565b90815260200160405180910390205f8481526020019081526020015f209050815f0b815f015f82825461014f919061036e565b9091555050600181810180545f90610168908490610395565b9250508190555081816002015f6064846003015461018691906103ae565b81526020019081526020015f205f6101000a81548160ff02191690835f0b60ff1602179055506001816003015f8282546101c09190610395565b92505081905550827fe9c5ff185c8f467585d402c5fc07c13de428d817f49e457ffc4a3d6f704f66a285846040516101f99291906103cd565b60405180910390a250505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261022a575f5ffd5b813567ffffffffffffffff81111561024457610244610207565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561027357610273610207565b60405281815283820160200185101561028a575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f604083850312156102b7575f5ffd5b823567ffffffffffffffff8111156102cd575f5ffd5b6102d98582860161021b565b95602094909401359450505050565b5f5f5f606084860312156102fa575f5ffd5b833567ffffffffffffffff811115610310575f5ffd5b61031c8682870161021b565b9350506020840135915060408401355f81900b8114610339575f5ffd5b809150509250925092565b5f82518060208501845e5f920191825250919050565b634e487b7160e01b5f52601160045260245ffd5b8082018281125f83128015821682158216171561038d5761038d61035a565b505092915050565b808201808211156103a8576103a861035a565b92915050565b5f826103c857634e487b7160e01b5f52601260045260245ffd5b500690565b604081525f83518060408401528060208601606085015e5f606082850101526060601f19601f830116840101915050825f0b6020830152939250505056fea2646970667358221220cade887d4b5a8a88638a3ae9c704a856b92af6a84b725084a26d7b4bf6897d1f64736f6c634300081c0033"},"devdoc":{"kind":"dev","methods":{},"version":1},"methodIdentifiers":{"MAX_RECENT_SCORES()":"0x55aeb22f","getReputation(string,uint256)":"0x1a3d2292","updateReputation(string,uint256,int8)":"0xe08240f7"},"runtimeBytecode":{"bytecode":"0x608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80631a3d22921461004357806355aeb22f14610068578063e08240f714610070575b5f5ffd5b6100566100513660046102a6565b610085565b60405190815260200160405180910390f35b610056606481565b61008361007e3660046102e8565b61010c565b005b5f5f5f846040516100969190610344565b90815260200160405180910390205f8481526020019081526020015f2090505f60648260010154116100cc5781600101546100cf565b60645b5f93509050825b81811015610103575f8181526002840160205260408120546100f9910b8561036e565b93506001016100d6565b50505092915050565b5f5f8460405161011c9190610344565b90815260200160405180910390205f8481526020019081526020015f209050815f0b815f015f82825461014f919061036e565b9091555050600181810180545f90610168908490610395565b9250508190555081816002015f6064846003015461018691906103ae565b81526020019081526020015f205f6101000a81548160ff02191690835f0b60ff1602179055506001816003015f8282546101c09190610395565b92505081905550827fe9c5ff185c8f467585d402c5fc07c13de428d817f49e457ffc4a3d6f704f66a285846040516101f99291906103cd565b60405180910390a250505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261022a575f5ffd5b813567ffffffffffffffff81111561024457610244610207565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561027357610273610207565b60405281815283820160200185101561028a575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f604083850312156102b7575f5ffd5b823567ffffffffffffffff8111156102cd575f5ffd5b6102d98582860161021b565b95602094909401359450505050565b5f5f5f606084860312156102fa575f5ffd5b833567ffffffffffffffff811115610310575f5ffd5b61031c8682870161021b565b9350506020840135915060408401355f81900b8114610339575f5ffd5b809150509250925092565b5f82518060208501845e5f920191825250919050565b634e487b7160e01b5f52601160045260245ffd5b8082018281125f83128015821682158216171561038d5761038d61035a565b505092915050565b808201808211156103a8576103a861035a565b92915050565b5f826103c857634e487b7160e01b5f52601260045260245ffd5b500690565b604081525f83518060408401528060208601606085015e5f606082850101526060601f19601f830116840101915050825f0b6020830152939250505056fea2646970667358221220cade887d4b5a8a88638a3ae9c704a856b92af6a84b725084a26d7b4bf6897d1f64736f6c634300081c0033"},"sourceId":"contracts/ReputationManager.sol","sourcemap":"57:2007:0:-:0;;;;;;;;;;;;;;;;;;;","userdoc":{"kind":"user","methods":{},"version":1}},"UserRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"nick","type":"string"},{"indexed":false,"internalType":"uint256","name":"fieldId","type":"uint256"}],"name":"ExpertFieldAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"nick","type":"string"},{"indexed":false,"internalType":"string","name":"public_key","type":"string"}],"name":"UserRegistered","type":"event"},{"inputs":[{"internalType":"string","name":"_nick","type":"string"},{"internalType":"uint256","name":"_fieldId","type":"uint256"}],"name":"addExpertField","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_address","type":"string"}],"name":"getNickByAddress","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_nick","type":"string"}],"name":"getUserInfo","outputs":[{"internalType":"string","name":"public_key","type":"string"},{"internalType":"uint256[]","name":"expertFields","type":"uint256[]"},{"internalType":"string","name":"additional_data","type":"string"},{"internalType":"bool","name":"is_bot","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_nick","type":"string"},{"internalType":"string","name":"_publicKey","type":"string"},{"internalType":"string","name":"_additionalData","type":"string"},{"internalType":"bool","name":"_isBot","type":"bool"}],"name":"registerUser","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"nonpayable","type":"function"}],"contractName":"UserRegistry","deploymentBytecode":{"bytecode":"0x6080604052348015600e575f5ffd5b50610b238061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063037a93d71461004e57806321c7e7d8146100635780637c9b7fdd1461008c5780639ef1d46f146100af575b5f5ffd5b61006161005c36600461076d565b6100c2565b005b6100766100713660046107af565b61021b565b6040516100839190610817565b60405180910390f35b61009f61009a3660046107af565b6102c9565b6040516100839493929190610830565b6100766100bd3660046108a5565b6104e8565b5f826040516100d1919061094a565b9081526040519081900360200190206005015460ff6101009091041661012f5760405162461bcd60e51b815260206004820152600e60248201526d1d5cd95c97db9bdd17d95e1a5cdd60921b60448201526064015b60405180910390fd5b5f5f8360405161013f919061094a565b90815260408051602092819003830190205f8581526003820190935291205490915060ff16156101a75760405162461bcd60e51b8152602060048201526013602482015272199a595b1917d85b1c9958591e57d859191959606a1b6044820152606401610126565b600281018054600181810183555f928352602080842090920185905584835260038401909152604091829020805460ff19169091179055517fe8c8d70a47cfd9e36447bfef4703abc190a6ea8608550a2c7fd4f0308e1365a99061020e9085908590610960565b60405180910390a1505050565b606060018260405161022d919061094a565b9081526020016040518091039020805461024690610981565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610981565b80156102bd5780601f10610294576101008083540402835291602001916102bd565b820191905f5260205f20905b8154815290600101906020018083116102a057829003601f168201915b50505050509050919050565b60608060605f5f856040516102de919061094a565b9081526040519081900360200190206005015460ff610100909104166103375760405162461bcd60e51b815260206004820152600e60248201526d1d5cd95c97db9bdd17d95e1a5cdd60921b6044820152606401610126565b5f5f86604051610347919061094a565b90815260200160405180910390209050806001018160020182600401836005015f9054906101000a900460ff1683805461038090610981565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac90610981565b80156103f75780601f106103ce576101008083540402835291602001916103f7565b820191905f5260205f20905b8154815290600101906020018083116103da57829003601f168201915b505050505093508280548060200260200160405190810160405280929190818152602001828054801561044757602002820191905f5260205f20905b815481526020019060010190808311610433575b5050505050925081805461045a90610981565b80601f016020809104026020016040519081016040528092919081815260200182805461048690610981565b80156104d15780601f106104a8576101008083540402835291602001916104d1565b820191905f5260205f20905b8154815290600101906020018083116104b457829003601f168201915b505050505091509450945094509450509193509193565b60605f856040516104f9919061094a565b9081526040519081900360200190206005015460ff61010090910416156105575760405162461bcd60e51b81526020600482015260126024820152713734b1b5afb0b63932b0b23cafba30b5b2b760711b6044820152606401610126565b600184604051610567919061094a565b9081526020016040518091039020805461058090610981565b1590506105cf5760405162461bcd60e51b815260206004820152601a60248201527f616464726573735f616c72656164795f726567697374657265640000000000006044820152606401610126565b5f5f866040516105df919061094a565b9081526040519081900360200190209050806105fb8782610a05565b506001810161060a8682610a05565b50600481016106198582610a05565b5060058101805461ff00198515151661ffff1990911617610100179055604051869060019061064990889061094a565b908152602001604051809103902090816106639190610a05565b507f996d7324173609959370942b1ee1b743dc623b3d50459e66c1d55df55e5a9f378686604051610695929190610ac0565b60405180910390a1505060408051808201909152601081526f72656769737465725f7375636365737360801b6020820152949350505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126106f1575f5ffd5b813567ffffffffffffffff81111561070b5761070b6106ce565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561073a5761073a6106ce565b604052818152838201602001851015610751575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f6040838503121561077e575f5ffd5b823567ffffffffffffffff811115610794575f5ffd5b6107a0858286016106e2565b95602094909401359450505050565b5f602082840312156107bf575f5ffd5b813567ffffffffffffffff8111156107d5575f5ffd5b6107e1848285016106e2565b949350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61082960208301846107e9565b9392505050565b608081525f61084260808301876107e9565b82810360208401528086518083526020830191506020880192505f5b8181101561087c57835183526020938401939092019160010161085e565b5050838103604085015261089081876107e9565b92505050821515606083015295945050505050565b5f5f5f5f608085870312156108b8575f5ffd5b843567ffffffffffffffff8111156108ce575f5ffd5b6108da878288016106e2565b945050602085013567ffffffffffffffff8111156108f6575f5ffd5b610902878288016106e2565b935050604085013567ffffffffffffffff81111561091e575f5ffd5b61092a878288016106e2565b9250506060850135801515811461093f575f5ffd5b939692955090935050565b5f82518060208501845e5f920191825250919050565b604081525f61097260408301856107e9565b90508260208301529392505050565b600181811c9082168061099557607f821691505b6020821081036109b357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610a0057805f5260205f20601f840160051c810160208510156109de5750805b601f840160051c820191505b818110156109fd575f81556001016109ea565b50505b505050565b815167ffffffffffffffff811115610a1f57610a1f6106ce565b610a3381610a2d8454610981565b846109b9565b6020601f821160018114610a65575f8315610a4e5750848201515b5f19600385901b1c1916600184901b1784556109fd565b5f84815260208120601f198516915b82811015610a945787850151825560209485019460019092019101610a74565b5084821015610ab157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b604081525f610ad260408301856107e9565b8281036020840152610ae481856107e9565b9594505050505056fea26469706673582212204b45f2897107618398970c43cfabf6055c24caba83116d220a5527a5eac8a9f764736f6c634300081c0033"},"devdoc":{"kind":"dev","methods":{},"version":1},"methodIdentifiers":{"addExpertField(string,uint256)":"0x037a93d7","getNickByAddress(string)":"0x21c7e7d8","getUserInfo(string)":"0x7c9b7fdd","registerUser(string,string,string,bool)":"0x9ef1d46f"},"runtimeBytecode":{"bytecode":"0x608060405234801561000f575f5ffd5b506004361061004a575f3560e01c8063037a93d71461004e57806321c7e7d8146100635780637c9b7fdd1461008c5780639ef1d46f146100af575b5f5ffd5b61006161005c36600461076d565b6100c2565b005b6100766100713660046107af565b61021b565b6040516100839190610817565b60405180910390f35b61009f61009a3660046107af565b6102c9565b6040516100839493929190610830565b6100766100bd3660046108a5565b6104e8565b5f826040516100d1919061094a565b9081526040519081900360200190206005015460ff6101009091041661012f5760405162461bcd60e51b815260206004820152600e60248201526d1d5cd95c97db9bdd17d95e1a5cdd60921b60448201526064015b60405180910390fd5b5f5f8360405161013f919061094a565b90815260408051602092819003830190205f8581526003820190935291205490915060ff16156101a75760405162461bcd60e51b8152602060048201526013602482015272199a595b1917d85b1c9958591e57d859191959606a1b6044820152606401610126565b600281018054600181810183555f928352602080842090920185905584835260038401909152604091829020805460ff19169091179055517fe8c8d70a47cfd9e36447bfef4703abc190a6ea8608550a2c7fd4f0308e1365a99061020e9085908590610960565b60405180910390a1505050565b606060018260405161022d919061094a565b9081526020016040518091039020805461024690610981565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610981565b80156102bd5780601f10610294576101008083540402835291602001916102bd565b820191905f5260205f20905b8154815290600101906020018083116102a057829003601f168201915b50505050509050919050565b60608060605f5f856040516102de919061094a565b9081526040519081900360200190206005015460ff610100909104166103375760405162461bcd60e51b815260206004820152600e60248201526d1d5cd95c97db9bdd17d95e1a5cdd60921b6044820152606401610126565b5f5f86604051610347919061094a565b90815260200160405180910390209050806001018160020182600401836005015f9054906101000a900460ff1683805461038090610981565b80601f01602080910402602001604051908101604052809291908181526020018280546103ac90610981565b80156103f75780601f106103ce576101008083540402835291602001916103f7565b820191905f5260205f20905b8154815290600101906020018083116103da57829003601f168201915b505050505093508280548060200260200160405190810160405280929190818152602001828054801561044757602002820191905f5260205f20905b815481526020019060010190808311610433575b5050505050925081805461045a90610981565b80601f016020809104026020016040519081016040528092919081815260200182805461048690610981565b80156104d15780601f106104a8576101008083540402835291602001916104d1565b820191905f5260205f20905b8154815290600101906020018083116104b457829003601f168201915b505050505091509450945094509450509193509193565b60605f856040516104f9919061094a565b9081526040519081900360200190206005015460ff61010090910416156105575760405162461bcd60e51b81526020600482015260126024820152713734b1b5afb0b63932b0b23cafba30b5b2b760711b6044820152606401610126565b600184604051610567919061094a565b9081526020016040518091039020805461058090610981565b1590506105cf5760405162461bcd60e51b815260206004820152601a60248201527f616464726573735f616c72656164795f726567697374657265640000000000006044820152606401610126565b5f5f866040516105df919061094a565b9081526040519081900360200190209050806105fb8782610a05565b506001810161060a8682610a05565b50600481016106198582610a05565b5060058101805461ff00198515151661ffff1990911617610100179055604051869060019061064990889061094a565b908152602001604051809103902090816106639190610a05565b507f996d7324173609959370942b1ee1b743dc623b3d50459e66c1d55df55e5a9f378686604051610695929190610ac0565b60405180910390a1505060408051808201909152601081526f72656769737465725f7375636365737360801b6020820152949350505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126106f1575f5ffd5b813567ffffffffffffffff81111561070b5761070b6106ce565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561073a5761073a6106ce565b604052818152838201602001851015610751575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f6040838503121561077e575f5ffd5b823567ffffffffffffffff811115610794575f5ffd5b6107a0858286016106e2565b95602094909401359450505050565b5f602082840312156107bf575f5ffd5b813567ffffffffffffffff8111156107d5575f5ffd5b6107e1848285016106e2565b949350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61082960208301846107e9565b9392505050565b608081525f61084260808301876107e9565b82810360208401528086518083526020830191506020880192505f5b8181101561087c57835183526020938401939092019160010161085e565b5050838103604085015261089081876107e9565b92505050821515606083015295945050505050565b5f5f5f5f608085870312156108b8575f5ffd5b843567ffffffffffffffff8111156108ce575f5ffd5b6108da878288016106e2565b945050602085013567ffffffffffffffff8111156108f6575f5ffd5b610902878288016106e2565b935050604085013567ffffffffffffffff81111561091e575f5ffd5b61092a878288016106e2565b9250506060850135801515811461093f575f5ffd5b939692955090935050565b5f82518060208501845e5f920191825250919050565b604081525f61097260408301856107e9565b90508260208301529392505050565b600181811c9082168061099557607f821691505b6020821081036109b357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610a0057805f5260205f20601f840160051c810160208510156109de5750805b601f840160051c820191505b818110156109fd575f81556001016109ea565b50505b505050565b815167ffffffffffffffff811115610a1f57610a1f6106ce565b610a3381610a2d8454610981565b846109b9565b6020601f821160018114610a65575f8315610a4e5750848201515b5f19600385901b1c1916600184901b1784556109fd565b5f84815260208120601f198516915b82811015610a945787850151825560209485019460019092019101610a74565b5084821015610ab157868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b604081525f610ad260408301856107e9565b8281036020840152610ae481856107e9565b9594505050505056fea26469706673582212204b45f2897107618398970c43cfabf6055c24caba83116d220a5527a5eac8a9f764736f6c634300081c0033"},"sourceId":"contracts/UserRegistry.sol","sourcemap":"57:2227:3:-:0;;;;;;;;;;;;;;;;;;;","userdoc":{"kind":"user","methods":{},"version":1}}},"manifest":"ethpm/3","sources":{"contracts/ExpertCaseManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IReputationManager {\n    function updateReputation(string memory _user, uint256 _fieldId, int8 _score) external;\n    function getReputation(string memory _user, uint256 _fieldId) external view returns (uint256);\n}\n\ninterface IUserRegistry {\n    function getNickByAddress(string memory _address) external view returns (string memory);\n    function getUserInfo(string memory _nick)\n        external\n        view\n        returns (\n            string memory public_key,\n            uint256[] memory expertFields,\n            string memory additional_data,\n            bool is_bot\n        );\n}\n\ncontract ExpertCaseManager {\n    struct ExpertCase {\n        uint256 ECId;\n        uint256 itemId;\n        uint256 fieldId;\n        uint256 minReputation;\n        bool botAllowed;\n        string ECInfo;\n        mapping(string => bool) hasVoted;\n        mapping(string => uint8) voterChoices;\n        string[] voters;\n        mapping(uint8 => uint256) votes;\n        uint8[] optionsVoted; // Added to track voted options\n        bool isOpen;\n        bool exists;\n    }\n\n    mapping(uint256 => ExpertCase) private expertCases;\n    uint256 private ECIdCounter;\n\n    IReputationManager private reputationManager;\n    IUserRegistry private userRegistry;\n\n    event ExpertCaseOpened(uint256 ECId, uint256 itemId, string openedBy);\n    event VoteCast(uint256 ECId, string voter, uint8 option);\n    event ExpertCaseClosed(uint256 ECId, uint8 winningOption);\n\n    constructor(address _reputationManagerAddress, address _userRegistryAddress) {\n        reputationManager = IReputationManager(_reputationManagerAddress);\n        userRegistry = IUserRegistry(_userRegistryAddress);\n    }\n\n    function openExpertCase(\n        uint256 _itemId,\n        uint256 _fieldId,\n        uint256 _minReputation,\n        string memory _publicKey,\n        bool _botAllowed,\n        string memory _ECInfo\n    ) public returns (uint256) {\n        ECIdCounter++;\n        uint256 newECId = ECIdCounter;\n\n        ExpertCase storage ec = expertCases[newECId];\n        ec.ECId = newECId;\n        ec.itemId = _itemId;\n        ec.fieldId = _fieldId;\n        ec.minReputation = _minReputation;\n        ec.botAllowed = _botAllowed;\n        ec.ECInfo = _ECInfo;\n        ec.isOpen = true;\n        ec.exists = true;\n\n        emit ExpertCaseOpened(newECId, _itemId, _publicKey);\n\n        return newECId;\n    }\n\n    function castVote(\n        uint256 _ECId,\n        uint8 _option,\n        string memory _publicKey\n    ) public {\n        require(expertCases[_ECId].exists, \"EC_not_exist\");\n        require(expertCases[_ECId].isOpen, \"EC_closed\");\n\n        ExpertCase storage ec = expertCases[_ECId];\n\n        // Verify voter registration\n        string memory voterNick = userRegistry.getNickByAddress(_publicKey);\n        require(bytes(voterNick).length > 0, \"user_not_registered\");\n\n        // Get user info\n        (\n            ,\n            uint256[] memory expertFields,\n            ,\n            bool isBot\n        ) = userRegistry.getUserInfo(voterNick);\n\n        // Check if bots are allowed\n        require(ec.botAllowed || !isBot, \"bots_not_allowed\");\n\n        // Check if user is an expert in the required field\n        bool isExpert = false;\n        for (uint256 i = 0; i < expertFields.length; i++) {\n            if (expertFields[i] == ec.fieldId) {\n                isExpert = true;\n                break;\n            }\n        }\n        require(isExpert, \"not_expert_in_field\");\n\n        // Check user's reputation\n        uint256 userReputation = reputationManager.getReputation(_publicKey, ec.fieldId);\n        require(userReputation >= ec.minReputation, \"reputation_too_low\");\n\n        // Check if user has already voted\n        require(!ec.hasVoted[_publicKey], \"already_voted\");\n\n        // Record the vote\n        ec.hasVoted[_publicKey] = true;\n        ec.votes[_option] += 1;\n        ec.voterChoices[_publicKey] = _option;\n        ec.voters.push(_publicKey);\n\n        // Add option to optionsVoted if it's the first vote for that option\n        if (ec.votes[_option] == 1) {\n            ec.optionsVoted.push(_option);\n        }\n\n        emit VoteCast(_ECId, _publicKey, _option);\n    }\n\n    function closeExpertCase(uint256 _ECId) public {\n        require(expertCases[_ECId].exists, \"EC_not_exist\");\n        require(expertCases[_ECId].isOpen, \"EC_already_closed\");\n\n        ExpertCase storage ec = expertCases[_ECId];\n        ec.isOpen = false;\n\n        // Determine the winning option\n        uint8 winningOption;\n        uint256 maxVotes = 0;\n\n        for (uint256 i = 0; i < ec.optionsVoted.length; i++) {\n            uint8 option = ec.optionsVoted[i];\n            uint256 votesForOption = ec.votes[option];\n            if (votesForOption > maxVotes) {\n                maxVotes = votesForOption;\n                winningOption = option;\n            }\n        }\n\n        uint256 winningVotersCount = 0;\n        for (uint256 i = 0; i < ec.voters.length; i++) {\n            string memory voter = ec.voters[i];\n            if (ec.voterChoices[voter] == winningOption) {\n                winningVotersCount += 1;\n            }\n        }\n\n        int256 reputationIncrementTemp = int256(ec.voters.length / winningVotersCount);\n        int8 reputationIncrement = reputationIncrementTemp > 10 ? int8(10) : int8(reputationIncrementTemp);\n\n        // Update reputation for voters\n        for (uint256 i = 0; i < ec.voters.length; i++) {\n            string memory voter = ec.voters[i];\n            uint8 voterOption = ec.voterChoices[voter];\n            uint256 fieldId = ec.fieldId;\n\n            if (voterOption == winningOption) {\n                reputationManager.updateReputation(voter, fieldId, reputationIncrement);\n            }\n            else {\n                reputationManager.updateReputation(voter, fieldId, -1);\n            }\n        }\n\n        emit ExpertCaseClosed(_ECId, winningOption);\n    }\n\n    function getExpertCase(uint256 _ECId)\n        public\n        view\n        returns (\n            uint256 itemId,\n            uint256 fieldId,\n            uint256 minReputation,\n            bool botAllowed,\n            string memory ECInfo,\n            bool isOpen\n        )\n    {\n        require(expertCases[_ECId].exists, \"EC_not_exist\");\n        ExpertCase storage ec = expertCases[_ECId];\n        return (\n            ec.itemId,\n            ec.fieldId,\n            ec.minReputation,\n            ec.botAllowed,\n            ec.ECInfo,\n            ec.isOpen\n        );\n    }\n}\n","urls":[]},"contracts/ItemRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract ItemRegistry {\n    struct Item {\n        uint256 itemId;\n        string category;\n        string itemInfo;\n        string owner;\n        bool exists;\n    }\n\n    mapping(uint256 => Item) private items;\n    uint256 private itemCounter;\n\n    event ItemAdded(uint256 itemId, string category, string owner);\n\n    function addItem(\n        string memory _category,\n        string memory _itemInfo,\n        string memory _publicKey\n    ) public returns (uint256) {\n        itemCounter++;\n        uint256 newItemId = itemCounter;\n\n        items[newItemId] = Item({\n            itemId: newItemId,\n            category: _category,\n            itemInfo: _itemInfo,\n            owner: _publicKey,\n            exists: true\n        });\n\n        emit ItemAdded(newItemId, _category, _publicKey);\n\n        return newItemId;\n    }\n\n    function getItem(uint256 _itemId)\n        public\n        view\n        returns (\n            string memory category,\n            string memory itemInfo,\n            string memory owner\n        )\n    {\n        require(items[_itemId].exists, \"item_not_exist\");\n        Item storage item = items[_itemId];\n        return (item.category, item.itemInfo, item.owner);\n    }\n}\n","urls":[]},"contracts/ReputationManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract ReputationManager {\n    struct Reputation {\n        int256 totalScore;\n        uint256 totalCases;\n        mapping(uint256 => int8) recentScores;\n        uint256 recentIndex;\n    }\n\n    // Use public key (string) to identify users, and fieldId (uint256) for reputation within fields\n    mapping(string => mapping(uint256 => Reputation)) private reputations;\n\n    uint256 public constant MAX_RECENT_SCORES = 100;\n\n    event ReputationUpdated(string user, uint256 indexed fieldId, int8 score);\n\n    // Update the reputation of a user identified by their public key\n    function updateReputation(\n        string memory _user,  // Public key as string\n        uint256 _fieldId,          // Field ID to track reputation in a specific area\n        int8 _score                // Score to be added (positive or negative)\n    ) external {\n        Reputation storage rep = reputations[_user][_fieldId];\n\n        // Update the total score and total cases\n        rep.totalScore += _score;\n        rep.totalCases += 1;\n\n        // Add the score to the recent scores array with circular indexing\n        rep.recentScores[rep.recentIndex % MAX_RECENT_SCORES] = _score;\n        rep.recentIndex += 1;\n\n        // Emit the ReputationUpdated event with public key and field ID\n        emit ReputationUpdated(_user, _fieldId, _score);\n    }\n\n    // Get the sum of recent reputation scores for a user in a specific field\n    function getReputation(string memory _user, uint256 _fieldId)\n        external\n        view\n        returns (int256 sumRecentScores)\n    {\n        Reputation storage rep = reputations[_user][_fieldId];\n\n        // Determine the number of recent scores to sum (based on totalCases vs. MAX_RECENT_SCORES)\n        uint256 scoresCount = rep.totalCases > MAX_RECENT_SCORES ? MAX_RECENT_SCORES : rep.totalCases;\n        sumRecentScores = 0;\n\n        // Sum up the recent scores\n        for (uint256 i = 0; i < scoresCount; i++) {\n            sumRecentScores += rep.recentScores[i];\n        }\n    }\n}\n","urls":[]},"contracts/UserRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract UserRegistry {\n    struct User {\n        string nick;\n        string public_key;\n        uint256[] expertFields;\n        mapping(uint256 => bool) hasExpertField; // For checking duplicates\n        string additional_data;\n        bool is_bot;\n        bool exists;\n    }\n\n    mapping(string => User) private users;\n    mapping(string => string) private addressToNick;\n\n    event UserRegistered(string nick, string public_key);\n    event ExpertFieldAdded(string nick, uint256 fieldId);\n\n    function registerUser(\n        string memory _nick,\n        string memory _publicKey,\n        string memory _additionalData,\n        bool _isBot\n    ) public returns (string memory) {\n        require(!users[_nick].exists, \"nick_already_taken\");\n        require(bytes(addressToNick[_publicKey]).length == 0, \"address_already_registered\");\n\n        User storage user = users[_nick];\n        user.nick = _nick;\n        user.public_key = _publicKey;\n        user.additional_data = _additionalData;\n        user.is_bot = _isBot;\n        user.exists = true;\n\n        addressToNick[_publicKey] = _nick;\n\n        emit UserRegistered(_nick, _publicKey);\n\n        return \"register_success\";\n    }\n\n    function addExpertField(string memory _nick, uint256 _fieldId) external {\n        require(users[_nick].exists, \"user_not_exist\");\n        User storage user = users[_nick];\n\n        require(!user.hasExpertField[_fieldId], \"field_already_added\");\n\n        user.expertFields.push(_fieldId);\n        user.hasExpertField[_fieldId] = true;\n\n        emit ExpertFieldAdded(_nick, _fieldId);\n    }\n\n    function getUserInfo(string memory _nick)\n        public\n        view\n        returns (\n            string memory public_key,\n            uint256[] memory expertFields,\n            string memory additional_data,\n            bool is_bot\n        )\n    {\n        require(users[_nick].exists, \"user_not_exist\");\n        User storage user = users[_nick];\n        return (\n            user.public_key,\n            user.expertFields,\n            user.additional_data,\n            user.is_bot\n        );\n    }\n\n    function getNickByAddress(string memory _address) external view returns (string memory) {\n        return addressToNick[_address];\n    }\n}\n","urls":[]}}}